"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/page/[id]";
exports.ids = ["pages/api/page/[id]"];
exports.modules = {

/***/ "(api)/./pages/api/page/[id].ts":
/*!********************************!*\
  !*** ./pages/api/page/[id].ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_api_notion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/api/notion */ \"(api)/./utils/api/notion.ts\");\n/* harmony import */ var _utils_api_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/api/utils */ \"(api)/./utils/api/utils.ts\");\n/* harmony import */ var _utils_api_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/api/response */ \"(api)/./utils/api/response.ts\");\n/* harmony import */ var _table_id___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../table/[id] */ \"(api)/./pages/api/table/[id].ts\");\n// pages/api/index.ts\n\n\n\n\nasync function handler(req, response) {\n    const pageId = (0,_utils_api_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(req.query.id);\n    const page = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchPageById)(pageId, undefined);\n    const baseBlocks = page.recordMap.block;\n    let allBlocks = {\n        ...baseBlocks\n    };\n    let allBlockKeys;\n    while(true){\n        allBlockKeys = Object.keys(allBlocks);\n        const pendingBlocks = allBlockKeys.flatMap((blockId)=>{\n            const block = allBlocks[blockId];\n            const content = block.value && block.value.content;\n            if (!content || block.value.type === \"page\" && blockId !== pageId) {\n                // skips pages other than the requested page\n                return [];\n            }\n            return content.filter((id)=>!allBlocks[id]\n            );\n        });\n        if (!pendingBlocks.length) {\n            break;\n        }\n        const newBlocks = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchBlocks)(pendingBlocks, undefined).then((res)=>res.recordMap.block\n        );\n        allBlocks = {\n            ...allBlocks,\n            ...newBlocks\n        };\n    }\n    const collection = page.recordMap.collection ? page.recordMap.collection[Object.keys(page.recordMap.collection)[0]] : null;\n    const collectionView = page.recordMap.collection_view ? page.recordMap.collection_view[Object.keys(page.recordMap.collection_view)[0]] : null;\n    if (collection && collectionView) {\n        const pendingCollections = allBlockKeys.flatMap((blockId)=>{\n            const block = allBlocks[blockId];\n            return block.value && block.value.type === \"collection_view\" ? [\n                block.value.id\n            ] : [];\n        });\n        for (let b of pendingCollections){\n            const collPage = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchPageById)(b, undefined);\n            const coll = Object.keys(collPage.recordMap.collection).map((k)=>collPage.recordMap.collection[k]\n            )[0];\n            const collView = Object.keys(collPage.recordMap.collection_view).map((k)=>collPage.recordMap.collection_view[k]\n            )[0];\n            const { rows , schema  } = await (0,_table_id___WEBPACK_IMPORTED_MODULE_3__.getTableData)(coll, collView.value.id, undefined, true);\n            const viewIds = allBlocks[b].value.view_ids;\n            allBlocks[b] = {\n                ...allBlocks[b],\n                collection: {\n                    title: coll.value.name,\n                    schema,\n                    types: viewIds.map((id)=>{\n                        const col = collPage.recordMap.collection_view[id];\n                        return col ? col.value : undefined;\n                    }),\n                    data: rows\n                }\n            };\n        }\n    }\n    return (0,_utils_api_response__WEBPACK_IMPORTED_MODULE_2__.createResponse)(response, allBlocks);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/page/[id].ts\n");

/***/ }),

/***/ "(api)/./pages/api/table/[id].ts":
/*!*********************************!*\
  !*** ./pages/api/table/[id].ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tableRoute),\n/* harmony export */   \"getTableData\": () => (/* binding */ getTableData)\n/* harmony export */ });\n/* harmony import */ var _utils_api_notion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/api/notion */ \"(api)/./utils/api/notion.ts\");\n/* harmony import */ var _utils_api_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/api/utils */ \"(api)/./utils/api/utils.ts\");\n/* harmony import */ var _utils_api_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/api/response */ \"(api)/./utils/api/response.ts\");\n\n\n\nconst getTableData = async (collection, collectionViewId, notionToken, raw)=>{\n    const table = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchTableData)(collection.value.id, collectionViewId, notionToken);\n    const collectionRows = collection.value.schema;\n    const collectionColKeys = Object.keys(collectionRows);\n    const tableArr = table.result.reducerResults.collection_group_results.blockIds.map((id)=>table.recordMap.block[id]\n    );\n    const tableData = tableArr.filter((b)=>b.value && b.value.properties && b.value.parent_id === collection.value.id\n    );\n    const rows = [];\n    for (const td of tableData){\n        let row = {\n            id: td.value.id\n        };\n        for (const key of collectionColKeys){\n            const val = td.value.properties[key];\n            if (val) {\n                const schema = collectionRows[key];\n                row[schema.name] = raw ? val : (0,_utils_api_utils__WEBPACK_IMPORTED_MODULE_1__.getNotionValue)(val, schema.type, td);\n                if (schema.type === \"person\" && row[schema.name]) {\n                    const users = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchNotionUsers)(row[schema.name]);\n                    row[schema.name] = users;\n                }\n            }\n        }\n        rows.push(row);\n    }\n    return {\n        rows,\n        schema: collectionRows\n    };\n};\nasync function tableRoute(req, response) {\n    const pageId = (0,_utils_api_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(req.query.id);\n    const page = await (0,_utils_api_notion__WEBPACK_IMPORTED_MODULE_0__.fetchPageById)(pageId, undefined);\n    if (!page.recordMap.collection) return (0,_utils_api_response__WEBPACK_IMPORTED_MODULE_2__.createResponse)(response, JSON.stringify({\n        error: \"No table found on Notion page: \" + pageId\n    }), {}, 401);\n    const collection = Object.keys(page.recordMap.collection).map((k)=>page.recordMap.collection[k]\n    )[0];\n    const collectionView = Object.keys(page.recordMap.collection_view).map((k)=>page.recordMap.collection_view[k]\n    )[0];\n    const { rows  } = await getTableData(collection, collectionView.value.id, undefined);\n    return (0,_utils_api_response__WEBPACK_IMPORTED_MODULE_2__.createResponse)(response, rows);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdGFibGUvW2lkXS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RjtBQUNyQjtBQU9WO0FBR3RELE1BQU1NLFlBQVksR0FBRyxPQUMxQkMsVUFBMEIsRUFDMUJDLGdCQUF3QixFQUN4QkMsV0FBb0IsRUFDcEJDLEdBQWEsR0FDVjtJQUNILE1BQU1DLEtBQUssR0FBRyxNQUFNVixpRUFBYyxDQUNoQ00sVUFBVSxDQUFDSyxLQUFLLENBQUNDLEVBQUUsRUFDbkJMLGdCQUFnQixFQUNoQkMsV0FBVyxDQUNaO0lBRUQsTUFBTUssY0FBYyxHQUFHUCxVQUFVLENBQUNLLEtBQUssQ0FBQ0csTUFBTTtJQUM5QyxNQUFNQyxpQkFBaUIsR0FBR0MsTUFBTSxDQUFDQyxJQUFJLENBQUNKLGNBQWMsQ0FBQztJQUVyRCxNQUFNSyxRQUFRLEdBQWNSLEtBQUssQ0FBQ1MsTUFBTSxDQUFDQyxjQUFjLENBQUNDLHdCQUF3QixDQUFDQyxRQUFRLENBQUNDLEdBQUcsQ0FDM0YsQ0FBQ1gsRUFBVSxHQUFLRixLQUFLLENBQUNjLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDYixFQUFFLENBQUM7SUFBQSxDQUMxQztJQUVELE1BQU1jLFNBQVMsR0FBR1IsUUFBUSxDQUFDUyxNQUFNLENBQy9CLENBQUNDLENBQUMsR0FDQUEsQ0FBQyxDQUFDakIsS0FBSyxJQUFJaUIsQ0FBQyxDQUFDakIsS0FBSyxDQUFDa0IsVUFBVSxJQUFJRCxDQUFDLENBQUNqQixLQUFLLENBQUNtQixTQUFTLEtBQUt4QixVQUFVLENBQUNLLEtBQUssQ0FBQ0MsRUFBRTtJQUFBLENBQzdFO0lBSUQsTUFBTW1CLElBQUksR0FBVSxFQUFFO0lBRXRCLEtBQUssTUFBTUMsRUFBRSxJQUFJTixTQUFTLENBQUU7UUFDMUIsSUFBSU8sR0FBRyxHQUFRO1lBQUVyQixFQUFFLEVBQUVvQixFQUFFLENBQUNyQixLQUFLLENBQUNDLEVBQUU7U0FBRTtRQUVsQyxLQUFLLE1BQU1zQixHQUFHLElBQUluQixpQkFBaUIsQ0FBRTtZQUNuQyxNQUFNb0IsR0FBRyxHQUFHSCxFQUFFLENBQUNyQixLQUFLLENBQUNrQixVQUFVLENBQUNLLEdBQUcsQ0FBQztZQUNwQyxJQUFJQyxHQUFHLEVBQUU7Z0JBQ1AsTUFBTXJCLE1BQU0sR0FBR0QsY0FBYyxDQUFDcUIsR0FBRyxDQUFDO2dCQUNsQ0QsR0FBRyxDQUFDbkIsTUFBTSxDQUFDc0IsSUFBSSxDQUFDLEdBQUczQixHQUFHLEdBQUcwQixHQUFHLEdBQUdoQyxnRUFBYyxDQUFDZ0MsR0FBRyxFQUFFckIsTUFBTSxDQUFDdUIsSUFBSSxFQUFFTCxFQUFFLENBQUMsQ0FBQztnQkFDcEUsSUFBSWxCLE1BQU0sQ0FBQ3VCLElBQUksS0FBSyxRQUFRLElBQUlKLEdBQUcsQ0FBQ25CLE1BQU0sQ0FBQ3NCLElBQUksQ0FBQyxFQUFFO29CQUNoRCxNQUFNRSxLQUFLLEdBQUcsTUFBTXJDLG1FQUFnQixDQUFDZ0MsR0FBRyxDQUFDbkIsTUFBTSxDQUFDc0IsSUFBSSxDQUFDLENBQWE7b0JBQ2xFSCxHQUFHLENBQUNuQixNQUFNLENBQUNzQixJQUFJLENBQUMsR0FBR0UsS0FBSyxDQUFRO2lCQUNqQzthQUNGO1NBQ0Y7UUFDRFAsSUFBSSxDQUFDUSxJQUFJLENBQUNOLEdBQUcsQ0FBQyxDQUFDO0tBQ2hCO0lBRUQsT0FBTztRQUFFRixJQUFJO1FBQUVqQixNQUFNLEVBQUVELGNBQWM7S0FBRSxDQUFDO0NBQ3pDLENBQUM7QUFFYSxlQUFlMkIsVUFBVSxDQUFDQyxHQUFtQixFQUMxREMsUUFBeUIsRUFBRztJQUM1QixNQUFNQyxNQUFNLEdBQUd6Qyw2REFBVyxDQUFDdUMsR0FBRyxDQUFDRyxLQUFLLENBQUNoQyxFQUFFLENBQUM7SUFDeEMsTUFBTWlDLElBQUksR0FBRyxNQUFNOUMsZ0VBQWEsQ0FBQzRDLE1BQU0sRUFBRUcsU0FBUyxDQUFDO0lBRW5ELElBQUksQ0FBQ0QsSUFBSSxDQUFDckIsU0FBUyxDQUFDbEIsVUFBVSxFQUM1QixPQUFPRixtRUFBYyxDQUFDc0MsUUFBUSxFQUM1QkssSUFBSSxDQUFDQyxTQUFTLENBQUM7UUFBRUMsS0FBSyxFQUFFLGlDQUFpQyxHQUFHTixNQUFNO0tBQUUsQ0FBQyxFQUNyRSxFQUFFLEVBQ0YsR0FBRyxDQUNKLENBQUM7SUFFSixNQUFNckMsVUFBVSxHQUFHVSxNQUFNLENBQUNDLElBQUksQ0FBQzRCLElBQUksQ0FBQ3JCLFNBQVMsQ0FBQ2xCLFVBQVUsQ0FBQyxDQUFDaUIsR0FBRyxDQUMzRCxDQUFDMkIsQ0FBQyxHQUFLTCxJQUFJLENBQUNyQixTQUFTLENBQUNsQixVQUFVLENBQUM0QyxDQUFDLENBQUM7SUFBQSxDQUNwQyxDQUFDLENBQUMsQ0FBQztJQUVKLE1BQU1DLGNBQWMsR0FFaEJuQyxNQUFNLENBQUNDLElBQUksQ0FBQzRCLElBQUksQ0FBQ3JCLFNBQVMsQ0FBQzRCLGVBQWUsQ0FBQyxDQUFDN0IsR0FBRyxDQUNqRCxDQUFDMkIsQ0FBQyxHQUFLTCxJQUFJLENBQUNyQixTQUFTLENBQUM0QixlQUFlLENBQUNGLENBQUMsQ0FBQztJQUFBLENBQ3pDLENBQUMsQ0FBQyxDQUFDO0lBRUosTUFBTSxFQUFFbkIsSUFBSSxHQUFFLEdBQUcsTUFBTTFCLFlBQVksQ0FDakNDLFVBQVUsRUFDVjZDLGNBQWMsQ0FBQ3hDLEtBQUssQ0FBQ0MsRUFBRSxFQUN2QmtDLFNBQVMsQ0FDVjtJQUVELE9BQU8xQyxtRUFBYyxDQUFDc0MsUUFBUSxFQUFDWCxJQUFJLENBQUMsQ0FBQztDQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3Nob3RjbG9jay8uL3BhZ2VzL2FwaS90YWJsZS9baWRdLnRzPzU1OWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmV0Y2hQYWdlQnlJZCwgZmV0Y2hUYWJsZURhdGEsIGZldGNoTm90aW9uVXNlcnMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvYXBpL25vdGlvblwiO1xuaW1wb3J0IHsgcGFyc2VQYWdlSWQsIGdldE5vdGlvblZhbHVlIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2FwaS91dGlsc1wiO1xuaW1wb3J0IHtcbiAgUm93Q29udGVudFR5cGUsXG4gIENvbGxlY3Rpb25UeXBlLFxuICBSb3dUeXBlLFxuICBIYW5kbGVyUmVxdWVzdCxcbn0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2FwaS90eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvYXBpL3Jlc3BvbnNlXCI7XG5pbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSBcIm5leHRcIjtcblxuZXhwb3J0IGNvbnN0IGdldFRhYmxlRGF0YSA9IGFzeW5jIChcbiAgY29sbGVjdGlvbjogQ29sbGVjdGlvblR5cGUsXG4gIGNvbGxlY3Rpb25WaWV3SWQ6IHN0cmluZyxcbiAgbm90aW9uVG9rZW4/OiBzdHJpbmcsXG4gIHJhdz86IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCB0YWJsZSA9IGF3YWl0IGZldGNoVGFibGVEYXRhKFxuICAgIGNvbGxlY3Rpb24udmFsdWUuaWQsXG4gICAgY29sbGVjdGlvblZpZXdJZCxcbiAgICBub3Rpb25Ub2tlblxuICApO1xuXG4gIGNvbnN0IGNvbGxlY3Rpb25Sb3dzID0gY29sbGVjdGlvbi52YWx1ZS5zY2hlbWE7XG4gIGNvbnN0IGNvbGxlY3Rpb25Db2xLZXlzID0gT2JqZWN0LmtleXMoY29sbGVjdGlvblJvd3MpO1xuXG4gIGNvbnN0IHRhYmxlQXJyOiBSb3dUeXBlW10gPSB0YWJsZS5yZXN1bHQucmVkdWNlclJlc3VsdHMuY29sbGVjdGlvbl9ncm91cF9yZXN1bHRzLmJsb2NrSWRzLm1hcChcbiAgICAoaWQ6IHN0cmluZykgPT4gdGFibGUucmVjb3JkTWFwLmJsb2NrW2lkXVxuICApO1xuXG4gIGNvbnN0IHRhYmxlRGF0YSA9IHRhYmxlQXJyLmZpbHRlcihcbiAgICAoYikgPT5cbiAgICAgIGIudmFsdWUgJiYgYi52YWx1ZS5wcm9wZXJ0aWVzICYmIGIudmFsdWUucGFyZW50X2lkID09PSBjb2xsZWN0aW9uLnZhbHVlLmlkXG4gICk7XG5cbiAgdHlwZSBSb3cgPSB7IGlkOiBzdHJpbmc7IFtrZXk6IHN0cmluZ106IFJvd0NvbnRlbnRUeXBlIH07XG5cbiAgY29uc3Qgcm93czogUm93W10gPSBbXTtcblxuICBmb3IgKGNvbnN0IHRkIG9mIHRhYmxlRGF0YSkge1xuICAgIGxldCByb3c6IFJvdyA9IHsgaWQ6IHRkLnZhbHVlLmlkIH07XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBjb2xsZWN0aW9uQ29sS2V5cykge1xuICAgICAgY29uc3QgdmFsID0gdGQudmFsdWUucHJvcGVydGllc1trZXldO1xuICAgICAgaWYgKHZhbCkge1xuICAgICAgICBjb25zdCBzY2hlbWEgPSBjb2xsZWN0aW9uUm93c1trZXldO1xuICAgICAgICByb3dbc2NoZW1hLm5hbWVdID0gcmF3ID8gdmFsIDogZ2V0Tm90aW9uVmFsdWUodmFsLCBzY2hlbWEudHlwZSwgdGQpO1xuICAgICAgICBpZiAoc2NoZW1hLnR5cGUgPT09IFwicGVyc29uXCIgJiYgcm93W3NjaGVtYS5uYW1lXSkge1xuICAgICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgZmV0Y2hOb3Rpb25Vc2Vycyhyb3dbc2NoZW1hLm5hbWVdIGFzIHN0cmluZ1tdKTtcbiAgICAgICAgICByb3dbc2NoZW1hLm5hbWVdID0gdXNlcnMgYXMgYW55O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJvd3MucHVzaChyb3cpO1xuICB9XG5cbiAgcmV0dXJuIHsgcm93cywgc2NoZW1hOiBjb2xsZWN0aW9uUm93cyB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gdGFibGVSb3V0ZShyZXE6IE5leHRBcGlSZXF1ZXN0LFxuICByZXNwb25zZTogTmV4dEFwaVJlc3BvbnNlLCkge1xuICBjb25zdCBwYWdlSWQgPSBwYXJzZVBhZ2VJZChyZXEucXVlcnkuaWQpO1xuICBjb25zdCBwYWdlID0gYXdhaXQgZmV0Y2hQYWdlQnlJZChwYWdlSWQhLHVuZGVmaW5lZCk7XG5cbiAgaWYgKCFwYWdlLnJlY29yZE1hcC5jb2xsZWN0aW9uKVxuICAgIHJldHVybiBjcmVhdGVSZXNwb25zZShyZXNwb25zZSxcbiAgICAgIEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6IFwiTm8gdGFibGUgZm91bmQgb24gTm90aW9uIHBhZ2U6IFwiICsgcGFnZUlkIH0pLFxuICAgICAge30sXG4gICAgICA0MDFcbiAgICApO1xuXG4gIGNvbnN0IGNvbGxlY3Rpb24gPSBPYmplY3Qua2V5cyhwYWdlLnJlY29yZE1hcC5jb2xsZWN0aW9uKS5tYXAoXG4gICAgKGspID0+IHBhZ2UucmVjb3JkTWFwLmNvbGxlY3Rpb25ba11cbiAgKVswXTtcblxuICBjb25zdCBjb2xsZWN0aW9uVmlldzoge1xuICAgIHZhbHVlOiB7IGlkOiBDb2xsZWN0aW9uVHlwZVtcInZhbHVlXCJdW1wiaWRcIl0gfTtcbiAgfSA9IE9iamVjdC5rZXlzKHBhZ2UucmVjb3JkTWFwLmNvbGxlY3Rpb25fdmlldykubWFwKFxuICAgIChrKSA9PiBwYWdlLnJlY29yZE1hcC5jb2xsZWN0aW9uX3ZpZXdba11cbiAgKVswXTtcblxuICBjb25zdCB7IHJvd3MgfSA9IGF3YWl0IGdldFRhYmxlRGF0YShcbiAgICBjb2xsZWN0aW9uLFxuICAgIGNvbGxlY3Rpb25WaWV3LnZhbHVlLmlkLFxuICAgIHVuZGVmaW5lZFxuICApO1xuXG4gIHJldHVybiBjcmVhdGVSZXNwb25zZShyZXNwb25zZSxyb3dzKTtcbn1cbiJdLCJuYW1lcyI6WyJmZXRjaFBhZ2VCeUlkIiwiZmV0Y2hUYWJsZURhdGEiLCJmZXRjaE5vdGlvblVzZXJzIiwicGFyc2VQYWdlSWQiLCJnZXROb3Rpb25WYWx1ZSIsImNyZWF0ZVJlc3BvbnNlIiwiZ2V0VGFibGVEYXRhIiwiY29sbGVjdGlvbiIsImNvbGxlY3Rpb25WaWV3SWQiLCJub3Rpb25Ub2tlbiIsInJhdyIsInRhYmxlIiwidmFsdWUiLCJpZCIsImNvbGxlY3Rpb25Sb3dzIiwic2NoZW1hIiwiY29sbGVjdGlvbkNvbEtleXMiLCJPYmplY3QiLCJrZXlzIiwidGFibGVBcnIiLCJyZXN1bHQiLCJyZWR1Y2VyUmVzdWx0cyIsImNvbGxlY3Rpb25fZ3JvdXBfcmVzdWx0cyIsImJsb2NrSWRzIiwibWFwIiwicmVjb3JkTWFwIiwiYmxvY2siLCJ0YWJsZURhdGEiLCJmaWx0ZXIiLCJiIiwicHJvcGVydGllcyIsInBhcmVudF9pZCIsInJvd3MiLCJ0ZCIsInJvdyIsImtleSIsInZhbCIsIm5hbWUiLCJ0eXBlIiwidXNlcnMiLCJwdXNoIiwidGFibGVSb3V0ZSIsInJlcSIsInJlc3BvbnNlIiwicGFnZUlkIiwicXVlcnkiLCJwYWdlIiwidW5kZWZpbmVkIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yIiwiayIsImNvbGxlY3Rpb25WaWV3IiwiY29sbGVjdGlvbl92aWV3Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/table/[id].ts\n");

/***/ }),

/***/ "(api)/./utils/api/notion.ts":
/*!*****************************!*\
  !*** ./utils/api/notion.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchBlocks\": () => (/* binding */ fetchBlocks),\n/* harmony export */   \"fetchNotionSearch\": () => (/* binding */ fetchNotionSearch),\n/* harmony export */   \"fetchNotionUsers\": () => (/* binding */ fetchNotionUsers),\n/* harmony export */   \"fetchPageById\": () => (/* binding */ fetchPageById),\n/* harmony export */   \"fetchTableData\": () => (/* binding */ fetchTableData)\n/* harmony export */ });\nconst NOTION_API = \"https://www.notion.so/api/v3\";\nconst loadPageChunkBody = {\n    limit: 100,\n    cursor: {\n        stack: []\n    },\n    chunkNumber: 0,\n    verticalColumns: false\n};\nconst fetchNotionData = async ({ resource , body , notionToken  })=>{\n    const res = await fetch(`${NOTION_API}/${resource}`, {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json\",\n            ...notionToken && {\n                cookie: `token_v2=${notionToken}`\n            }\n        },\n        body: JSON.stringify(body)\n    });\n    return res.json();\n};\nconst fetchPageById = async (pageId, notionToken)=>{\n    const res = await fetchNotionData({\n        resource: \"loadPageChunk\",\n        body: {\n            pageId,\n            ...loadPageChunkBody\n        },\n        notionToken\n    });\n    return res;\n};\nconst queryCollectionBody = {\n    loader: {\n        type: \"reducer\",\n        reducers: {\n            collection_group_results: {\n                type: \"results\",\n                limit: 999,\n                loadContentCover: true\n            },\n            \"table:uncategorized:title:count\": {\n                type: \"aggregation\",\n                aggregation: {\n                    property: \"title\",\n                    aggregator: \"count\"\n                }\n            }\n        },\n        searchQuery: \"\",\n        userTimeZone: \"Europe/Vienna\"\n    }\n};\nconst fetchTableData = async (collectionId, collectionViewId, notionToken)=>{\n    const table = await fetchNotionData({\n        resource: \"queryCollection\",\n        body: {\n            collection: {\n                id: collectionId\n            },\n            collectionView: {\n                id: collectionViewId\n            },\n            ...queryCollectionBody\n        },\n        notionToken\n    });\n    return table;\n};\nconst fetchNotionUsers = async (userIds, notionToken)=>{\n    const users = await fetchNotionData({\n        resource: \"getRecordValues\",\n        body: {\n            requests: userIds.map((id)=>({\n                    id,\n                    table: \"notion_user\"\n                })\n            )\n        },\n        notionToken\n    });\n    if (users && users.results) {\n        return users.results.map((u)=>{\n            const user = {\n                id: u.value.id,\n                firstName: u.value.given_name,\n                lastLame: u.value.family_name,\n                fullName: u.value.given_name + \" \" + u.value.family_name,\n                profilePhoto: u.value.profile_photo\n            };\n            return user;\n        });\n    }\n    return [];\n};\nconst fetchBlocks = async (blockList, notionToken)=>{\n    return await fetchNotionData({\n        resource: \"syncRecordValues\",\n        body: {\n            requests: blockList.map((id)=>({\n                    id,\n                    table: \"block\",\n                    version: -1\n                })\n            )\n        },\n        notionToken\n    });\n};\nconst fetchNotionSearch = async (params, notionToken)=>{\n    // TODO: support other types of searches\n    return fetchNotionData({\n        resource: \"search\",\n        body: {\n            type: \"BlocksInAncestor\",\n            source: \"quick_find_public\",\n            ancestorId: params.ancestorId,\n            filters: {\n                isDeletedOnly: false,\n                excludeTemplates: true,\n                isNavigableOnly: true,\n                requireEditPermissions: false,\n                ancestors: [],\n                createdBy: [],\n                editedBy: [],\n                lastEditedTime: {},\n                createdTime: {},\n                ...params.filters\n            },\n            sort: \"Relevance\",\n            limit: params.limit || 20,\n            query: params.query\n        },\n        notionToken\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/api/notion.ts\n");

/***/ }),

/***/ "(api)/./utils/api/response.ts":
/*!*******************************!*\
  !*** ./utils/api/response.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createResponse\": () => (/* binding */ createResponse)\n/* harmony export */ });\nconst createResponse = (response, body, headers, statusCode)=>{\n    return response.status(statusCode || 200).json({\n        body\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9hcGkvcmVzcG9uc2UudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUdPLE1BQU1BLGNBQWMsR0FBRyxDQUM1QkMsUUFBMEIsRUFDMUJDLElBQW9CLEVBQ3BCQyxPQUFtQyxFQUNuQ0MsVUFBbUIsR0FDaEI7SUFDSCxPQUFPSCxRQUFRLENBQUNJLE1BQU0sQ0FBQ0QsVUFBVSxJQUFJLEdBQUcsQ0FBQyxDQUFDRSxJQUFJLENBQUM7UUFDN0NKLElBQUk7S0FDTCxDQUFDLENBQUM7Q0FDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2hvdGNsb2NrLy4vdXRpbHMvYXBpL3Jlc3BvbnNlLnRzP2NlOWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCB7IEpTT05EYXRhIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVJlc3BvbnNlID0gKFxuICByZXNwb25zZSA6IE5leHRBcGlSZXNwb25zZSxcbiAgYm9keTogSlNPTkRhdGEgfCBhbnksXG4gIGhlYWRlcnM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9LFxuICBzdGF0dXNDb2RlPzogbnVtYmVyXG4pID0+IHtcbiAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyhzdGF0dXNDb2RlIHx8IDIwMCkuanNvbih7XG4gICAgYm9keSxcbiAgfSk7XG59O1xuIl0sIm5hbWVzIjpbImNyZWF0ZVJlc3BvbnNlIiwicmVzcG9uc2UiLCJib2R5IiwiaGVhZGVycyIsInN0YXR1c0NvZGUiLCJzdGF0dXMiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./utils/api/response.ts\n");

/***/ }),

/***/ "(api)/./utils/api/utils.ts":
/*!****************************!*\
  !*** ./utils/api/utils.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNotionValue\": () => (/* binding */ getNotionValue),\n/* harmony export */   \"idToUuid\": () => (/* binding */ idToUuid),\n/* harmony export */   \"parsePageId\": () => (/* binding */ parsePageId)\n/* harmony export */ });\nconst idToUuid = (path)=>`${path.substr(0, 8)}-${path.substr(8, 4)}-${path.substr(12, 4)}-${path.substr(16, 4)}-${path.substr(20)}`\n;\nconst parsePageId = (id)=>{\n    if (Array.isArray(id)) {\n        const rawId = id[0].replace(/\\-/g, \"\").slice(-32);\n        return idToUuid(rawId);\n    }\n    if (id) {\n        const rawId = id.replace(/\\-/g, \"\").slice(-32);\n        return idToUuid(rawId);\n    }\n};\nconst getNotionValue = (val, type, row)=>{\n    switch(type){\n        case \"text\":\n            return getTextContent(val);\n        case \"person\":\n            return val.filter((v)=>v.length > 1\n            ).map((v)=>v[1][0][1]\n            ) || [];\n        case \"checkbox\":\n            return val[0][0] === \"Yes\";\n        case \"date\":\n            if (val[0][1][0][0] === \"d\") return val[0][1][0][1].start_date;\n            else return \"\";\n        case \"title\":\n            return getTextContent(val);\n        case \"select\":\n        case \"email\":\n        case \"phone_number\":\n        case \"url\":\n            return val[0][0];\n        case \"multi_select\":\n            return val[0][0].split(\",\");\n        case \"number\":\n            return Number(val[0][0]);\n        case \"relation\":\n            return val.filter(([symbol])=>symbol === \"\\u2023\"\n            ).map(([_, relation])=>relation[0][1]\n            );\n        case \"file\":\n            return val.filter((v)=>v.length > 1\n            ).map((v)=>{\n                const rawUrl = v[1][0][1];\n                const url = new URL(`https://www.notion.so${rawUrl.startsWith(\"/image\") ? rawUrl : `/image/${encodeURIComponent(rawUrl)}`}`);\n                url.searchParams.set(\"table\", \"block\");\n                url.searchParams.set(\"id\", row.value.id);\n                url.searchParams.set(\"cache\", \"v2\");\n                return {\n                    name: v[0],\n                    url: url.toString(),\n                    rawUrl\n                };\n            });\n        default:\n            console.log({\n                val,\n                type\n            });\n            return \"Not supported\";\n    }\n};\nconst getTextContent = (text)=>{\n    return text.reduce((prev, current)=>prev + current[0]\n    , \"\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O2FBQzlELENBQUMsQ0FBQztRQUNQO1lBQ0VVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO2dCQUFFekIsR0FBRztnQkFBRUMsSUFBSTthQUFFLENBQUMsQ0FBQztZQUMzQixPQUFPLGVBQWUsQ0FBQztLQUMxQjtDQUNGLENBQUM7QUFFRixNQUFNRSxjQUFjLEdBQUcsQ0FBQ3VCLElBQXNCLEdBQUs7SUFDakQsT0FBT0EsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsSUFBSSxFQUFFQyxPQUFPLEdBQUtELElBQUksR0FBR0MsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUFBLEVBQUUsRUFBRSxDQUFDLENBQUM7Q0FDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaG90Y2xvY2svLi91dGlscy9hcGkvdXRpbHMudHM/OTFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZWNvcmF0aW9uVHlwZSxcbiAgQ29sdW1uVHlwZSxcbiAgUm93Q29udGVudFR5cGUsXG4gIEJsb2NrVHlwZSxcbiAgUm93VHlwZSxcbn0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGlkVG9VdWlkID0gKHBhdGg6IHN0cmluZykgPT5cbiAgYCR7cGF0aC5zdWJzdHIoMCwgOCl9LSR7cGF0aC5zdWJzdHIoOCwgNCl9LSR7cGF0aC5zdWJzdHIoXG4gICAgMTIsXG4gICAgNFxuICApfS0ke3BhdGguc3Vic3RyKDE2LCA0KX0tJHtwYXRoLnN1YnN0cigyMCl9YDtcblxuZXhwb3J0IGNvbnN0IHBhcnNlUGFnZUlkID0gKGlkOiBzdHJpbmcgfCBzdHJpbmdbXSkgPT4ge1xuICBpZiAoQXJyYXkuaXNBcnJheShpZCkpIHtcbiAgICBjb25zdCByYXdJZCA9IGlkWzBdLnJlcGxhY2UoL1xcLS9nLCBcIlwiKS5zbGljZSgtMzIpO1xuICAgIHJldHVybiBpZFRvVXVpZChyYXdJZCk7XG4gIH1cbiAgaWYgKGlkKSB7XG4gICAgY29uc3QgcmF3SWQgPSBpZC5yZXBsYWNlKC9cXC0vZywgXCJcIikuc2xpY2UoLTMyKTtcbiAgICByZXR1cm4gaWRUb1V1aWQocmF3SWQpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Tm90aW9uVmFsdWUgPSAoXG4gIHZhbDogRGVjb3JhdGlvblR5cGVbXSxcbiAgdHlwZTogQ29sdW1uVHlwZSxcbiAgcm93OiBSb3dUeXBlXG4pOiBSb3dDb250ZW50VHlwZSA9PiB7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgXCJ0ZXh0XCI6XG4gICAgICByZXR1cm4gZ2V0VGV4dENvbnRlbnQodmFsKTtcbiAgICBjYXNlIFwicGVyc29uXCI6XG4gICAgICByZXR1cm4gKFxuICAgICAgICB2YWwuZmlsdGVyKCh2KSA9PiB2Lmxlbmd0aCA+IDEpLm1hcCgodikgPT4gdlsxXSFbMF1bMV0gYXMgc3RyaW5nKSB8fCBbXVxuICAgICAgKTtcbiAgICBjYXNlIFwiY2hlY2tib3hcIjpcbiAgICAgIHJldHVybiB2YWxbMF1bMF0gPT09IFwiWWVzXCI7XG4gICAgY2FzZSBcImRhdGVcIjpcbiAgICAgIGlmICh2YWxbMF1bMV0hWzBdWzBdID09PSBcImRcIikgcmV0dXJuIHZhbFswXSFbMV0hWzBdIVsxXSEuc3RhcnRfZGF0ZTtcbiAgICAgIGVsc2UgcmV0dXJuIFwiXCI7XG4gICAgY2FzZSBcInRpdGxlXCI6XG4gICAgICByZXR1cm4gZ2V0VGV4dENvbnRlbnQodmFsKTtcbiAgICBjYXNlIFwic2VsZWN0XCI6XG4gICAgY2FzZSBcImVtYWlsXCI6XG4gICAgY2FzZSBcInBob25lX251bWJlclwiOlxuICAgIGNhc2UgXCJ1cmxcIjpcbiAgICAgIHJldHVybiB2YWxbMF1bMF07XG4gICAgY2FzZSBcIm11bHRpX3NlbGVjdFwiOlxuICAgICAgcmV0dXJuIHZhbFswXVswXS5zcGxpdChcIixcIikgYXMgc3RyaW5nW107XG4gICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgcmV0dXJuIE51bWJlcih2YWxbMF1bMF0pO1xuICAgIGNhc2UgXCJyZWxhdGlvblwiOlxuICAgICAgcmV0dXJuIHZhbFxuICAgICAgICAuZmlsdGVyKChbc3ltYm9sXSkgPT4gc3ltYm9sID09PSBcIuKAo1wiKVxuICAgICAgICAubWFwKChbXywgcmVsYXRpb25dKSA9PiByZWxhdGlvbiFbMF1bMV0gYXMgc3RyaW5nKTtcbiAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgcmV0dXJuIHZhbFxuICAgICAgICAuZmlsdGVyKCh2KSA9PiB2Lmxlbmd0aCA+IDEpXG4gICAgICAgIC5tYXAoKHYpID0+IHtcbiAgICAgICAgICBjb25zdCByYXdVcmwgPSB2WzFdIVswXVsxXSBhcyBzdHJpbmc7XG5cbiAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKFxuICAgICAgICAgICAgYGh0dHBzOi8vd3d3Lm5vdGlvbi5zbyR7XG4gICAgICAgICAgICAgIHJhd1VybC5zdGFydHNXaXRoKFwiL2ltYWdlXCIpXG4gICAgICAgICAgICAgICAgPyByYXdVcmxcbiAgICAgICAgICAgICAgICA6IGAvaW1hZ2UvJHtlbmNvZGVVUklDb21wb25lbnQocmF3VXJsKX1gXG4gICAgICAgICAgICB9YFxuICAgICAgICAgICk7XG5cbiAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChcInRhYmxlXCIsIFwiYmxvY2tcIik7XG4gICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJpZFwiLCByb3cudmFsdWUuaWQpO1xuICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwiY2FjaGVcIiwgXCJ2MlwiKTtcblxuICAgICAgICAgIHJldHVybiB7IG5hbWU6IHZbMF0gYXMgc3RyaW5nLCB1cmw6IHVybC50b1N0cmluZygpLCByYXdVcmwgfTtcbiAgICAgICAgfSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvbnNvbGUubG9nKHsgdmFsLCB0eXBlIH0pO1xuICAgICAgcmV0dXJuIFwiTm90IHN1cHBvcnRlZFwiO1xuICB9XG59O1xuXG5jb25zdCBnZXRUZXh0Q29udGVudCA9ICh0ZXh0OiBEZWNvcmF0aW9uVHlwZVtdKSA9PiB7XG4gIHJldHVybiB0ZXh0LnJlZHVjZSgocHJldiwgY3VycmVudCkgPT4gcHJldiArIGN1cnJlbnRbMF0sIFwiXCIpO1xufTtcbiJdLCJuYW1lcyI6WyJpZFRvVXVpZCIsInBhdGgiLCJzdWJzdHIiLCJwYXJzZVBhZ2VJZCIsImlkIiwiQXJyYXkiLCJpc0FycmF5IiwicmF3SWQiLCJyZXBsYWNlIiwic2xpY2UiLCJnZXROb3Rpb25WYWx1ZSIsInZhbCIsInR5cGUiLCJyb3ciLCJnZXRUZXh0Q29udGVudCIsImZpbHRlciIsInYiLCJsZW5ndGgiLCJtYXAiLCJzdGFydF9kYXRlIiwic3BsaXQiLCJOdW1iZXIiLCJzeW1ib2wiLCJfIiwicmVsYXRpb24iLCJyYXdVcmwiLCJ1cmwiLCJVUkwiLCJzdGFydHNXaXRoIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VhcmNoUGFyYW1zIiwic2V0IiwidmFsdWUiLCJuYW1lIiwidG9TdHJpbmciLCJjb25zb2xlIiwibG9nIiwidGV4dCIsInJlZHVjZSIsInByZXYiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./utils/api/utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/page/[id].ts"));
module.exports = __webpack_exports__;

})();