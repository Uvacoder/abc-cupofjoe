/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/about"],{

/***/ "./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".notion {\\n  font-size: 16px;\\n  line-height: 1.5;\\n  color: rgb(55, 53, 47);\\n  caret-color: rgb(55, 53, 47);\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica,\\n    \\\"Apple Color Emoji\\\", Arial, sans-serif, \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n}\\n\\n.notion > *,\\n.notion-page > *,\\n.notion-column > * {\\n  padding: 3px 0px;\\n}\\n\\n.notion * {\\n  box-sizing: border-box;\\n  -webkit-margin-before: 0px;\\n          margin-block-start: 0px;\\n  -webkit-margin-after: 0px;\\n          margin-block-end: 0px;\\n}\\n\\n.notion-red {\\n  color: rgb(224, 62, 62);\\n}\\n.notion-pink {\\n  color: rgb(173, 26, 114);\\n}\\n.notion-blue {\\n  color: rgb(11, 110, 153);\\n}\\n.notion-purple {\\n  color: rgb(105, 64, 165);\\n}\\n.notion-teal {\\n  color: rgb(15, 123, 108);\\n}\\n.notion-yellow {\\n  color: rgb(223, 171, 1);\\n}\\n.notion-orange {\\n  color: rgb(217, 115, 13);\\n}\\n.notion-brown {\\n  color: rgb(100, 71, 58);\\n}\\n.notion-gray {\\n  color: rgb(155, 154, 151);\\n}\\n.notion-red_background {\\n  background-color: rgb(251, 228, 228);\\n}\\n.notion-pink_background {\\n  background-color: rgb(244, 223, 235);\\n}\\n.notion-blue_background {\\n  background-color: rgb(221, 235, 241);\\n}\\n.notion-purple_background {\\n  background-color: rgb(234, 228, 242);\\n}\\n.notion-teal_background {\\n  background-color: rgb(221, 237, 234);\\n}\\n.notion-yellow_background {\\n  background-color: rgb(251, 243, 219);\\n}\\n.notion-orange_background {\\n  background-color: rgb(250, 235, 221);\\n}\\n.notion-brown_background {\\n  background-color: rgb(233, 229, 227);\\n}\\n.notion-gray_background {\\n  background-color: rgb(235, 236, 237);\\n}\\n.notion-red_background_co {\\n  background-color: rgb(251, 228, 228, 0.3);\\n}\\n.notion-pink_background_co {\\n  background-color: rgb(244, 223, 235, 0.3);\\n}\\n.notion-blue_background_co {\\n  background-color: rgb(221, 235, 241, 0.3);\\n}\\n.notion-purple_background_co {\\n  background-color: rgb(234, 228, 242, 0.3);\\n}\\n.notion-teal_background_co {\\n  background-color: rgb(221, 237, 234, 0.3);\\n}\\n.notion-yellow_background_co {\\n  background-color: rgb(251, 243, 219, 0.3);\\n}\\n.notion-orange_background_co {\\n  background-color: rgb(250, 235, 221, 0.3);\\n}\\n.notion-brown_background_co {\\n  background-color: rgb(233, 229, 227, 0.3);\\n}\\n.notion-gray_background_co {\\n  background-color: rgb(235, 236, 237, 0.3);\\n}\\n\\n.notion b {\\n  font-weight: 600;\\n}\\n\\n.notion-title {\\n  font-size: 2.5em;\\n  font-weight: 700;\\n  margin-top: 0.75em;\\n  margin-bottom: 0.25em;\\n}\\n\\n.notion-h1,\\n.notion-h2,\\n.notion-h3 {\\n  font-weight: 600;\\n  line-height: 1.3;\\n  padding: 3px 2px;\\n}\\n\\n.notion-h1 {\\n  font-size: 1.875em;\\n  margin-top: 1.4em;\\n}\\n.notion-h1:first-child {\\n  margin-top: 0;\\n}\\n.notion-h2 {\\n  font-size: 1.5em;\\n  margin-top: 1.1em;\\n}\\n.notion-h3 {\\n  font-size: 1.25em;\\n  margin-top: 1em;\\n}\\n.notion-emoji {\\n  font-family: \\\"Apple Color Emoji\\\", Arial, sans-serif, \\\"Segoe UI Emoji\\\",\\n    \\\"Segoe UI Symbol\\\";\\n}\\n.notion-page-cover {\\n  display: block;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 100%;\\n  height: 30vh;\\n  min-height: 30vh;\\n  padding: 0;\\n}\\n\\n.notion-page {\\n  padding: 0;\\n  margin: 0 auto;\\n  max-width: 708px;\\n  width: 100%;\\n}\\n\\n@media only screen and (max-width: 730px) {\\n  .notion-page {\\n    padding: 0 2vw;\\n  }\\n}\\n\\n.notion-page-offset {\\n  margin-top: 96px;\\n}\\n\\nspan.notion-page-icon-cover {\\n  height: 78px;\\n  width: 78px;\\n  font-size: 78px;\\n  display: inline-block;\\n  line-height: 1.1;\\n  margin-left: 0px;\\n}\\n\\nspan.notion-page-icon-offset {\\n  margin-top: -42px;\\n}\\n\\nimg.notion-page-icon-cover {\\n  border-radius: 3px;\\n  width: 124px;\\n  height: 124px;\\n  margin: 8px;\\n}\\n\\nimg.notion-page-icon-offset {\\n  margin-top: -80px;\\n}\\n\\n.notion-full-width {\\n  padding: 0 40px;\\n  max-width: 100%;\\n}\\n\\n.notion-small-text {\\n  font-size: 14px;\\n}\\n.notion-quote {\\n  white-space: pre-wrap;\\n  word-break: break-word;\\n  border-left: 3px solid currentcolor;\\n  padding: 0.2em 0.9em;\\n  margin: 0;\\n  font-size: 1.2em;\\n}\\n.notion-hr {\\n  margin: 6px 0px;\\n  padding: 0;\\n  border-top-width: 1px;\\n  border-bottom-width: 0;\\n  border-color: rgba(55, 53, 47, 0.09);\\n}\\n.notion-link {\\n  color: inherit;\\n  word-break: break-word;\\n  text-decoration: underline;\\n  -webkit-text-decoration-color: inherit;\\n          text-decoration-color: inherit;\\n}\\n.notion-blank {\\n  min-height: 1rem;\\n  padding: 3px 2px;\\n  margin-top: 1px;\\n  margin-bottom: 1px;\\n}\\n.notion-page-link {\\n  display: flex;\\n  color: rgb(55, 53, 47);\\n  text-decoration: none;\\n  height: 30px;\\n  margin: 1px 0px;\\n  transition: background 120ms ease-in 0s;\\n}\\n.notion-page-link:hover {\\n  background: rgba(55, 53, 47, 0.08);\\n}\\n\\n.notion-page-icon {\\n  line-height: 1.4;\\n  margin-right: 4px;\\n  margin-left: 2px;\\n}\\nimg.notion-page-icon {\\n  display: block;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  border-radius: 3px;\\n  width: 20px;\\n  height: 20px;\\n}\\n\\n.notion-icon {\\n  display: block;\\n  width: 18px;\\n  height: 18px;\\n  color: rgba(55, 53, 47, 0.4);\\n}\\n\\n.notion-page-text {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-weight: 500;\\n  line-height: 1.3;\\n  border-bottom: 1px solid rgba(55, 53, 47, 0.16);\\n  margin: 1px 0px;\\n}\\n\\n.notion-inline-code {\\n  color: #eb5757;\\n  padding: 0.2em 0.4em;\\n  background: rgba(135, 131, 120, 0.15);\\n  border-radius: 3px;\\n  font-size: 85%;\\n  font-family: \\\"SFMono-Regular\\\", Consolas, \\\"Liberation Mono\\\", Menlo, Courier,\\n    monospace;\\n}\\n\\n.notion-list {\\n  margin: 0;\\n  -webkit-margin-before: 0.6em;\\n          margin-block-start: 0.6em;\\n  -webkit-margin-after: 0.6em;\\n          margin-block-end: 0.6em;\\n}\\n\\n.notion-list-disc {\\n  list-style-type: disc;\\n  -webkit-padding-start: 1.6em;\\n          padding-inline-start: 1.6em;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n}\\n.notion-list-numbered {\\n  list-style-type: decimal;\\n  -webkit-padding-start: 1.6em;\\n          padding-inline-start: 1.6em;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n}\\n\\n.notion-list-disc li {\\n  padding-left: 0.1em;\\n}\\n\\n.notion-list-numbered li {\\n  padding-left: 0.2em;\\n}\\n\\n.notion-list li {\\n  padding: 4px 0px;\\n  white-space: pre-wrap;\\n}\\n\\n.notion-list > .notion-text {\\n  margin-left: -1.6em;\\n  padding-left: 0px;\\n}\\n\\n.notion-asset-wrapper {\\n  margin: 0.5rem auto 0.5rem;\\n  max-width: 100%;\\n}\\n\\n.notion-asset-wrapper > img {\\n  max-width: 100%;\\n}\\n\\n.notion-asset-wrapper iframe {\\n  border: none;\\n}\\n\\n.notion-text {\\n  white-space: pre-wrap;\\n  caret-color: rgb(55, 53, 47);\\n  padding: 3px 2px;\\n}\\n.notion-block {\\n  padding: 3px 2px;\\n}\\n\\n.notion .notion-code {\\n  font-size: 85%;\\n}\\n\\n.notion-code {\\n  padding: 30px 16px 30px 20px;\\n  margin: 4px 0;\\n  border-radius: 3px;\\n  -moz-tab-size: 2;\\n    -o-tab-size: 2;\\n       tab-size: 2;\\n  display: block;\\n  box-sizing: border-box;\\n  overflow-x: scroll;\\n  background: rgb(247, 246, 243);\\n  font-family: SFMono-Regular, Consolas, \\\"Liberation Mono\\\", Menlo, Courier,\\n    monospace;\\n}\\n\\n.notion-column {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n}\\n\\n.notion-column > *:first-child {\\n  margin-top: 0;\\n  margin-left: 0;\\n  margin-right: 0;\\n}\\n\\n.notion-column > *:last-child {\\n  margin-left: 0;\\n  margin-right: 0;\\n  margin-bottom: 0;\\n}\\n\\n.notion-row {\\n  display: flex;\\n  overflow: hidden;\\n}\\n\\n.notion-bookmark {\\n  margin: 4px 0;\\n  width: 100%;\\n  box-sizing: border-box;\\n  text-decoration: none;\\n  border: 1px solid rgba(55, 53, 47, 0.16);\\n  border-radius: 3px;\\n  display: flex;\\n  overflow: hidden;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.notion-bookmark > div:first-child {\\n  flex: 4 1 180px;\\n  padding: 12px 14px 14px;\\n  overflow: hidden;\\n  text-align: left;\\n  color: rgb(55, 53, 47);\\n}\\n\\n.notion-bookmark-title {\\n  font-size: 14px;\\n  line-height: 20px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  min-height: 24px;\\n  margin-bottom: 2px;\\n}\\n\\n.notion-bookmark-description {\\n  font-size: 12px;\\n  line-height: 16px;\\n  opacity: 0.6;\\n  height: 32px;\\n  overflow: hidden;\\n}\\n\\n.notion-bookmark-link {\\n  display: flex;\\n  margin-top: 6px;\\n}\\n\\n.notion-bookmark-link > img {\\n  width: 16px;\\n  height: 16px;\\n  min-width: 16px;\\n  margin-right: 6px;\\n}\\n\\n.notion-bookmark-link > div {\\n  font-size: 12px;\\n  line-height: 16px;\\n  color: rgb(55, 53, 47);\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.notion-bookmark-image {\\n  flex: 1 1 180px;\\n  position: relative;\\n}\\n\\n.notion-bookmark-image img {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n}\\n\\n.notion-column .notion-bookmark-image {\\n  display: none;\\n}\\n\\n@media (max-width: 640px) {\\n  .notion-bookmark-image {\\n    display: none;\\n  }\\n\\n  .notion-row {\\n    flex-direction: column;\\n  }\\n\\n  .notion-row > *,\\n  .notion-column > * {\\n    width: 100% !important;\\n  }\\n}\\n\\n.notion-spacer:last-child {\\n  display: none;\\n}\\n\\n.notion-image-inset {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 1px;\\n}\\n\\n.notion-image-caption {\\n  padding: 6px 0px;\\n  white-space: pre-wrap;\\n  word-break: break-word;\\n  caret-color: rgb(55, 53, 47);\\n  font-size: 14px;\\n  line-height: 1.4;\\n  color: rgba(55, 53, 47, 0.6);\\n}\\n\\n.notion-callout {\\n  padding: 16px 16px 16px 12px;\\n  display: inline-flex;\\n  width: 100%;\\n  border-radius: 3px;\\n  border-width: 1px;\\n  align-items: center;\\n  box-sizing: border-box;\\n  margin: 4px 0;\\n}\\n.notion-callout-text {\\n  margin-left: 8px;\\n  white-space: pre-line;\\n}\\n\\n.notion-toggle {\\n  padding: 3px 2px;\\n}\\n.notion-toggle > summary {\\n  cursor: pointer;\\n  outline: none;\\n}\\n.notion-toggle > div {\\n  margin-left: 1.1em;\\n}\\n\\n.notion-table,\\n.notion-th,\\n.notion-td {\\n  border: 1px solid rgba(55, 53, 47, 0.09);\\n  border-collapse: collapse;\\n}\\n\\n.notion-table {\\n  width: 100%;\\n  border-left: none;\\n  border-right: none;\\n  border-spacing: 0px;\\n  white-space: nowrap;\\n}\\n\\n.notion-th,\\n.notion-td {\\n  font-weight: normal;\\n  padding: 0.25em 0.5em;\\n  line-height: 1.5;\\n  min-height: 1.5em;\\n  text-align: left;\\n  font-size: 14px;\\n}\\n\\n.notion-td.notion-bold {\\n  font-weight: 500;\\n}\\n\\n.notion-th {\\n  color: rgba(55, 53, 47, 0.6);\\n  font-size: 14px;\\n}\\n\\n.notion-td:first-child,\\n.notion-th:first-child {\\n  border-left: 0;\\n}\\n\\n.notion-td:last-child,\\n.notion-th:last-child {\\n  border-right: 0;\\n}\\n\\n.notion-gallery {\\n  display: grid;\\n  position: relative;\\n  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\\n  grid-auto-rows: 1fr;\\n  gap: 16px;\\n  border-top: 1px solid rgba(55, 53, 47, 0.16);\\n  padding-top: 16px;\\n  padding-bottom: 4px;\\n}\\n.notion-gallery-card {\\n  display: block;\\n  color: inherit;\\n  text-decoration: none;\\n  box-shadow: rgba(15, 15, 15, 0.1) 0px 0px 0px 1px,\\n    rgba(15, 15, 15, 0.1) 0px 2px 4px;\\n  border-radius: 3px;\\n  background: white;\\n  overflow: hidden;\\n  transition: background 100ms ease-out 0s;\\n  position: static;\\n  height: 100%;\\n}\\n\\n.notion-gallery-content {\\n  padding: 8px 10px 6px;\\n  font-size: 12px;\\n  white-space: nowrap;\\n}\\n\\n.notion-gallery-data.is-first {\\n  white-space: nowrap;\\n  word-break: break-word;\\n  caret-color: rgb(55, 53, 47);\\n  font-size: 14px;\\n  line-height: 1.5;\\n  min-height: 21px;\\n  font-weight: 500;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.notion-page-header {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  width: 100%;\\n  max-width: 100vw;\\n  height: 45px;\\n  min-height: 45px;\\n  display: flex;\\n  background: #fff;\\n  flex-direction: row;\\n  box-sizing: border-box;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0 12px;\\n  -webkit-text-size-adjust: 100%;\\n     -moz-text-size-adjust: 100%;\\n          text-size-adjust: 100%;\\n  line-height: 1.2;\\n  font-size: 14px;\\n}\\n\\n.notion-nav-breadcrumbs {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  height: 100%;\\n  flex-grow: 0;\\n  min-width: 0;\\n  margin-right: 8px;\\n}\\n\\n.notion-nav-breadcrumb {\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  white-space: nowrap;\\n\\n  color: rgb(55, 53, 47);\\n  text-decoration: none;\\n  margin: 1px 0px;\\n  padding: 4px 6px;\\n  border-radius: 3px;\\n  transition: background 120ms ease-in 0s;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  background: transparent;\\n  cursor: pointer;\\n}\\n\\nimg.notion-nav-icon {\\n  width: 18px !important;\\n  height: 18px !important;\\n}\\n\\n.notion-nav-icon {\\n  font-size: 18px;\\n  margin-right: 6px;\\n  line-height: 1.1;\\n  color: #000;\\n}\\n\\n.notion-nav-breadcrumb:not(.notion-nav-breadcrumb-active):hover {\\n  background: rgba(55, 53, 47, 0.08);\\n}\\n\\n.notion-nav-breadcrumb:not(.notion-nav-breadcrumb-active):active {\\n  background: rgba(55, 53, 47, 0.16);\\n}\\n\\n.notion-nav-breadcrumb.notion-nav-breadcrumb-active {\\n  cursor: default;\\n}\\n\\n.notion-nav-spacer {\\n  margin: 0 2px;\\n  color: rgba(55, 53, 47, 0.4);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;EACf,gBAAgB;EAChB,sBAAsB;EACtB,4BAA4B;EAC5B;+EAC6E;AAC/E;;AAEA;;;EAGE,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;EACtB,0BAAuB;UAAvB,uBAAuB;EACvB,yBAAqB;UAArB,qBAAqB;AACvB;;AAEA;EACE,uBAAuB;AACzB;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,uBAAuB;AACzB;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,uBAAuB;AACzB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,oCAAoC;AACtC;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;;;EAGE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,aAAa;AACf;AACA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;AACA;EACE,iBAAiB;EACjB,eAAe;AACjB;AACA;EACE;qBACmB;AACrB;AACA;EACE,cAAc;EACd,oBAAiB;KAAjB,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,UAAU;EACV,cAAc;EACd,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE;IACE,cAAc;EAChB;AACF;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,eAAe;EACf,qBAAqB;EACrB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;AACA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,mCAAmC;EACnC,oBAAoB;EACpB,SAAS;EACT,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,UAAU;EACV,qBAAqB;EACrB,sBAAsB;EACtB,oCAAoC;AACtC;AACA;EACE,cAAc;EACd,sBAAsB;EACtB,0BAA0B;EAC1B,sCAA8B;UAA9B,8BAA8B;AAChC;AACA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,qBAAqB;EACrB,YAAY;EACZ,eAAe;EACf,uCAAuC;AACzC;AACA;EACE,kCAAkC;AACpC;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,cAAc;EACd,oBAAiB;KAAjB,iBAAiB;EACjB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,gBAAgB;EAChB,gBAAgB;EAChB,+CAA+C;EAC/C,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,oBAAoB;EACpB,qCAAqC;EACrC,kBAAkB;EAClB,cAAc;EACd;aACW;AACb;;AAEA;EACE,SAAS;EACT,4BAAyB;UAAzB,yBAAyB;EACzB,2BAAuB;UAAvB,uBAAuB;AACzB;;AAEA;EACE,qBAAqB;EACrB,4BAA2B;UAA3B,2BAA2B;EAC3B,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,wBAAwB;EACxB,4BAA2B;UAA3B,2BAA2B;EAC3B,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,0BAA0B;EAC1B,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,4BAA4B;EAC5B,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,4BAA4B;EAC5B,aAAa;EACb,kBAAkB;EAClB,gBAAW;IAAX,cAAW;OAAX,WAAW;EACX,cAAc;EACd,sBAAsB;EACtB,kBAAkB;EAClB,8BAA8B;EAC9B;aACW;AACb;;AAEA;EACE,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,sBAAsB;EACtB,qBAAqB;EACrB,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,gBAAgB;EAChB,yBAAiB;KAAjB,sBAAiB;MAAjB,qBAAiB;UAAjB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,sBAAsB;EACtB,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,oBAAiB;KAAjB,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,aAAa;EACf;;EAEA;IACE,sBAAsB;EACxB;;EAEA;;IAEE,sBAAsB;EACxB;AACF;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,sBAAsB;EACtB,4BAA4B;EAC5B,eAAe;EACf,gBAAgB;EAChB,4BAA4B;AAC9B;;AAEA;EACE,4BAA4B;EAC5B,oBAAoB;EACpB,WAAW;EACX,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,sBAAsB;EACtB,aAAa;AACf;AACA;EACE,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,aAAa;AACf;AACA;EACE,kBAAkB;AACpB;;AAEA;;;EAGE,wCAAwC;EACxC,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;;EAEE,mBAAmB;EACnB,qBAAqB;EACrB,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,4BAA4B;EAC5B,eAAe;AACjB;;AAEA;;EAEE,cAAc;AAChB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,4DAA4D;EAC5D,mBAAmB;EACnB,SAAS;EACT,4CAA4C;EAC5C,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,cAAc;EACd,qBAAqB;EACrB;qCACmC;EACnC,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,wCAAwC;EACxC,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,eAAe;EACf,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,wBAAgB;EAAhB,gBAAgB;EAChB,MAAM;EACN,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,gBAAgB;EAChB,mBAAmB;EACnB,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,8BAAsB;KAAtB,2BAAsB;UAAtB,sBAAsB;EAEtB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;;EAEnB,sBAAsB;EACtB,qBAAqB;EACrB,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,uCAAuC;EACvC,yBAAiB;KAAjB,sBAAiB;MAAjB,qBAAiB;UAAjB,iBAAiB;EACjB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,4BAA4B;AAC9B\",\"sourcesContent\":[\".notion {\\n  font-size: 16px;\\n  line-height: 1.5;\\n  color: rgb(55, 53, 47);\\n  caret-color: rgb(55, 53, 47);\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica,\\n    \\\"Apple Color Emoji\\\", Arial, sans-serif, \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n}\\n\\n.notion > *,\\n.notion-page > *,\\n.notion-column > * {\\n  padding: 3px 0px;\\n}\\n\\n.notion * {\\n  box-sizing: border-box;\\n  margin-block-start: 0px;\\n  margin-block-end: 0px;\\n}\\n\\n.notion-red {\\n  color: rgb(224, 62, 62);\\n}\\n.notion-pink {\\n  color: rgb(173, 26, 114);\\n}\\n.notion-blue {\\n  color: rgb(11, 110, 153);\\n}\\n.notion-purple {\\n  color: rgb(105, 64, 165);\\n}\\n.notion-teal {\\n  color: rgb(15, 123, 108);\\n}\\n.notion-yellow {\\n  color: rgb(223, 171, 1);\\n}\\n.notion-orange {\\n  color: rgb(217, 115, 13);\\n}\\n.notion-brown {\\n  color: rgb(100, 71, 58);\\n}\\n.notion-gray {\\n  color: rgb(155, 154, 151);\\n}\\n.notion-red_background {\\n  background-color: rgb(251, 228, 228);\\n}\\n.notion-pink_background {\\n  background-color: rgb(244, 223, 235);\\n}\\n.notion-blue_background {\\n  background-color: rgb(221, 235, 241);\\n}\\n.notion-purple_background {\\n  background-color: rgb(234, 228, 242);\\n}\\n.notion-teal_background {\\n  background-color: rgb(221, 237, 234);\\n}\\n.notion-yellow_background {\\n  background-color: rgb(251, 243, 219);\\n}\\n.notion-orange_background {\\n  background-color: rgb(250, 235, 221);\\n}\\n.notion-brown_background {\\n  background-color: rgb(233, 229, 227);\\n}\\n.notion-gray_background {\\n  background-color: rgb(235, 236, 237);\\n}\\n.notion-red_background_co {\\n  background-color: rgb(251, 228, 228, 0.3);\\n}\\n.notion-pink_background_co {\\n  background-color: rgb(244, 223, 235, 0.3);\\n}\\n.notion-blue_background_co {\\n  background-color: rgb(221, 235, 241, 0.3);\\n}\\n.notion-purple_background_co {\\n  background-color: rgb(234, 228, 242, 0.3);\\n}\\n.notion-teal_background_co {\\n  background-color: rgb(221, 237, 234, 0.3);\\n}\\n.notion-yellow_background_co {\\n  background-color: rgb(251, 243, 219, 0.3);\\n}\\n.notion-orange_background_co {\\n  background-color: rgb(250, 235, 221, 0.3);\\n}\\n.notion-brown_background_co {\\n  background-color: rgb(233, 229, 227, 0.3);\\n}\\n.notion-gray_background_co {\\n  background-color: rgb(235, 236, 237, 0.3);\\n}\\n\\n.notion b {\\n  font-weight: 600;\\n}\\n\\n.notion-title {\\n  font-size: 2.5em;\\n  font-weight: 700;\\n  margin-top: 0.75em;\\n  margin-bottom: 0.25em;\\n}\\n\\n.notion-h1,\\n.notion-h2,\\n.notion-h3 {\\n  font-weight: 600;\\n  line-height: 1.3;\\n  padding: 3px 2px;\\n}\\n\\n.notion-h1 {\\n  font-size: 1.875em;\\n  margin-top: 1.4em;\\n}\\n.notion-h1:first-child {\\n  margin-top: 0;\\n}\\n.notion-h2 {\\n  font-size: 1.5em;\\n  margin-top: 1.1em;\\n}\\n.notion-h3 {\\n  font-size: 1.25em;\\n  margin-top: 1em;\\n}\\n.notion-emoji {\\n  font-family: \\\"Apple Color Emoji\\\", Arial, sans-serif, \\\"Segoe UI Emoji\\\",\\n    \\\"Segoe UI Symbol\\\";\\n}\\n.notion-page-cover {\\n  display: block;\\n  object-fit: cover;\\n  width: 100%;\\n  height: 30vh;\\n  min-height: 30vh;\\n  padding: 0;\\n}\\n\\n.notion-page {\\n  padding: 0;\\n  margin: 0 auto;\\n  max-width: 708px;\\n  width: 100%;\\n}\\n\\n@media only screen and (max-width: 730px) {\\n  .notion-page {\\n    padding: 0 2vw;\\n  }\\n}\\n\\n.notion-page-offset {\\n  margin-top: 96px;\\n}\\n\\nspan.notion-page-icon-cover {\\n  height: 78px;\\n  width: 78px;\\n  font-size: 78px;\\n  display: inline-block;\\n  line-height: 1.1;\\n  margin-left: 0px;\\n}\\n\\nspan.notion-page-icon-offset {\\n  margin-top: -42px;\\n}\\n\\nimg.notion-page-icon-cover {\\n  border-radius: 3px;\\n  width: 124px;\\n  height: 124px;\\n  margin: 8px;\\n}\\n\\nimg.notion-page-icon-offset {\\n  margin-top: -80px;\\n}\\n\\n.notion-full-width {\\n  padding: 0 40px;\\n  max-width: 100%;\\n}\\n\\n.notion-small-text {\\n  font-size: 14px;\\n}\\n.notion-quote {\\n  white-space: pre-wrap;\\n  word-break: break-word;\\n  border-left: 3px solid currentcolor;\\n  padding: 0.2em 0.9em;\\n  margin: 0;\\n  font-size: 1.2em;\\n}\\n.notion-hr {\\n  margin: 6px 0px;\\n  padding: 0;\\n  border-top-width: 1px;\\n  border-bottom-width: 0;\\n  border-color: rgba(55, 53, 47, 0.09);\\n}\\n.notion-link {\\n  color: inherit;\\n  word-break: break-word;\\n  text-decoration: underline;\\n  text-decoration-color: inherit;\\n}\\n.notion-blank {\\n  min-height: 1rem;\\n  padding: 3px 2px;\\n  margin-top: 1px;\\n  margin-bottom: 1px;\\n}\\n.notion-page-link {\\n  display: flex;\\n  color: rgb(55, 53, 47);\\n  text-decoration: none;\\n  height: 30px;\\n  margin: 1px 0px;\\n  transition: background 120ms ease-in 0s;\\n}\\n.notion-page-link:hover {\\n  background: rgba(55, 53, 47, 0.08);\\n}\\n\\n.notion-page-icon {\\n  line-height: 1.4;\\n  margin-right: 4px;\\n  margin-left: 2px;\\n}\\nimg.notion-page-icon {\\n  display: block;\\n  object-fit: cover;\\n  border-radius: 3px;\\n  width: 20px;\\n  height: 20px;\\n}\\n\\n.notion-icon {\\n  display: block;\\n  width: 18px;\\n  height: 18px;\\n  color: rgba(55, 53, 47, 0.4);\\n}\\n\\n.notion-page-text {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-weight: 500;\\n  line-height: 1.3;\\n  border-bottom: 1px solid rgba(55, 53, 47, 0.16);\\n  margin: 1px 0px;\\n}\\n\\n.notion-inline-code {\\n  color: #eb5757;\\n  padding: 0.2em 0.4em;\\n  background: rgba(135, 131, 120, 0.15);\\n  border-radius: 3px;\\n  font-size: 85%;\\n  font-family: \\\"SFMono-Regular\\\", Consolas, \\\"Liberation Mono\\\", Menlo, Courier,\\n    monospace;\\n}\\n\\n.notion-list {\\n  margin: 0;\\n  margin-block-start: 0.6em;\\n  margin-block-end: 0.6em;\\n}\\n\\n.notion-list-disc {\\n  list-style-type: disc;\\n  padding-inline-start: 1.6em;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n}\\n.notion-list-numbered {\\n  list-style-type: decimal;\\n  padding-inline-start: 1.6em;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n}\\n\\n.notion-list-disc li {\\n  padding-left: 0.1em;\\n}\\n\\n.notion-list-numbered li {\\n  padding-left: 0.2em;\\n}\\n\\n.notion-list li {\\n  padding: 4px 0px;\\n  white-space: pre-wrap;\\n}\\n\\n.notion-list > .notion-text {\\n  margin-left: -1.6em;\\n  padding-left: 0px;\\n}\\n\\n.notion-asset-wrapper {\\n  margin: 0.5rem auto 0.5rem;\\n  max-width: 100%;\\n}\\n\\n.notion-asset-wrapper > img {\\n  max-width: 100%;\\n}\\n\\n.notion-asset-wrapper iframe {\\n  border: none;\\n}\\n\\n.notion-text {\\n  white-space: pre-wrap;\\n  caret-color: rgb(55, 53, 47);\\n  padding: 3px 2px;\\n}\\n.notion-block {\\n  padding: 3px 2px;\\n}\\n\\n.notion .notion-code {\\n  font-size: 85%;\\n}\\n\\n.notion-code {\\n  padding: 30px 16px 30px 20px;\\n  margin: 4px 0;\\n  border-radius: 3px;\\n  tab-size: 2;\\n  display: block;\\n  box-sizing: border-box;\\n  overflow-x: scroll;\\n  background: rgb(247, 246, 243);\\n  font-family: SFMono-Regular, Consolas, \\\"Liberation Mono\\\", Menlo, Courier,\\n    monospace;\\n}\\n\\n.notion-column {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n}\\n\\n.notion-column > *:first-child {\\n  margin-top: 0;\\n  margin-left: 0;\\n  margin-right: 0;\\n}\\n\\n.notion-column > *:last-child {\\n  margin-left: 0;\\n  margin-right: 0;\\n  margin-bottom: 0;\\n}\\n\\n.notion-row {\\n  display: flex;\\n  overflow: hidden;\\n}\\n\\n.notion-bookmark {\\n  margin: 4px 0;\\n  width: 100%;\\n  box-sizing: border-box;\\n  text-decoration: none;\\n  border: 1px solid rgba(55, 53, 47, 0.16);\\n  border-radius: 3px;\\n  display: flex;\\n  overflow: hidden;\\n  user-select: none;\\n}\\n\\n.notion-bookmark > div:first-child {\\n  flex: 4 1 180px;\\n  padding: 12px 14px 14px;\\n  overflow: hidden;\\n  text-align: left;\\n  color: rgb(55, 53, 47);\\n}\\n\\n.notion-bookmark-title {\\n  font-size: 14px;\\n  line-height: 20px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  min-height: 24px;\\n  margin-bottom: 2px;\\n}\\n\\n.notion-bookmark-description {\\n  font-size: 12px;\\n  line-height: 16px;\\n  opacity: 0.6;\\n  height: 32px;\\n  overflow: hidden;\\n}\\n\\n.notion-bookmark-link {\\n  display: flex;\\n  margin-top: 6px;\\n}\\n\\n.notion-bookmark-link > img {\\n  width: 16px;\\n  height: 16px;\\n  min-width: 16px;\\n  margin-right: 6px;\\n}\\n\\n.notion-bookmark-link > div {\\n  font-size: 12px;\\n  line-height: 16px;\\n  color: rgb(55, 53, 47);\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.notion-bookmark-image {\\n  flex: 1 1 180px;\\n  position: relative;\\n}\\n\\n.notion-bookmark-image img {\\n  object-fit: cover;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n}\\n\\n.notion-column .notion-bookmark-image {\\n  display: none;\\n}\\n\\n@media (max-width: 640px) {\\n  .notion-bookmark-image {\\n    display: none;\\n  }\\n\\n  .notion-row {\\n    flex-direction: column;\\n  }\\n\\n  .notion-row > *,\\n  .notion-column > * {\\n    width: 100% !important;\\n  }\\n}\\n\\n.notion-spacer:last-child {\\n  display: none;\\n}\\n\\n.notion-image-inset {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 1px;\\n}\\n\\n.notion-image-caption {\\n  padding: 6px 0px;\\n  white-space: pre-wrap;\\n  word-break: break-word;\\n  caret-color: rgb(55, 53, 47);\\n  font-size: 14px;\\n  line-height: 1.4;\\n  color: rgba(55, 53, 47, 0.6);\\n}\\n\\n.notion-callout {\\n  padding: 16px 16px 16px 12px;\\n  display: inline-flex;\\n  width: 100%;\\n  border-radius: 3px;\\n  border-width: 1px;\\n  align-items: center;\\n  box-sizing: border-box;\\n  margin: 4px 0;\\n}\\n.notion-callout-text {\\n  margin-left: 8px;\\n  white-space: pre-line;\\n}\\n\\n.notion-toggle {\\n  padding: 3px 2px;\\n}\\n.notion-toggle > summary {\\n  cursor: pointer;\\n  outline: none;\\n}\\n.notion-toggle > div {\\n  margin-left: 1.1em;\\n}\\n\\n.notion-table,\\n.notion-th,\\n.notion-td {\\n  border: 1px solid rgba(55, 53, 47, 0.09);\\n  border-collapse: collapse;\\n}\\n\\n.notion-table {\\n  width: 100%;\\n  border-left: none;\\n  border-right: none;\\n  border-spacing: 0px;\\n  white-space: nowrap;\\n}\\n\\n.notion-th,\\n.notion-td {\\n  font-weight: normal;\\n  padding: 0.25em 0.5em;\\n  line-height: 1.5;\\n  min-height: 1.5em;\\n  text-align: left;\\n  font-size: 14px;\\n}\\n\\n.notion-td.notion-bold {\\n  font-weight: 500;\\n}\\n\\n.notion-th {\\n  color: rgba(55, 53, 47, 0.6);\\n  font-size: 14px;\\n}\\n\\n.notion-td:first-child,\\n.notion-th:first-child {\\n  border-left: 0;\\n}\\n\\n.notion-td:last-child,\\n.notion-th:last-child {\\n  border-right: 0;\\n}\\n\\n.notion-gallery {\\n  display: grid;\\n  position: relative;\\n  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\\n  grid-auto-rows: 1fr;\\n  gap: 16px;\\n  border-top: 1px solid rgba(55, 53, 47, 0.16);\\n  padding-top: 16px;\\n  padding-bottom: 4px;\\n}\\n.notion-gallery-card {\\n  display: block;\\n  color: inherit;\\n  text-decoration: none;\\n  box-shadow: rgba(15, 15, 15, 0.1) 0px 0px 0px 1px,\\n    rgba(15, 15, 15, 0.1) 0px 2px 4px;\\n  border-radius: 3px;\\n  background: white;\\n  overflow: hidden;\\n  transition: background 100ms ease-out 0s;\\n  position: static;\\n  height: 100%;\\n}\\n\\n.notion-gallery-content {\\n  padding: 8px 10px 6px;\\n  font-size: 12px;\\n  white-space: nowrap;\\n}\\n\\n.notion-gallery-data.is-first {\\n  white-space: nowrap;\\n  word-break: break-word;\\n  caret-color: rgb(55, 53, 47);\\n  font-size: 14px;\\n  line-height: 1.5;\\n  min-height: 21px;\\n  font-weight: 500;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.notion-page-header {\\n  position: sticky;\\n  top: 0;\\n  width: 100%;\\n  max-width: 100vw;\\n  height: 45px;\\n  min-height: 45px;\\n  display: flex;\\n  background: #fff;\\n  flex-direction: row;\\n  box-sizing: border-box;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0 12px;\\n  text-size-adjust: 100%;\\n  line-height: 1.5;\\n  line-height: 1.2;\\n  font-size: 14px;\\n}\\n\\n.notion-nav-breadcrumbs {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  height: 100%;\\n  flex-grow: 0;\\n  min-width: 0;\\n  margin-right: 8px;\\n}\\n\\n.notion-nav-breadcrumb {\\n  display: inline-flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: center;\\n  white-space: nowrap;\\n\\n  color: rgb(55, 53, 47);\\n  text-decoration: none;\\n  margin: 1px 0px;\\n  padding: 4px 6px;\\n  border-radius: 3px;\\n  transition: background 120ms ease-in 0s;\\n  user-select: none;\\n  background: transparent;\\n  cursor: pointer;\\n}\\n\\nimg.notion-nav-icon {\\n  width: 18px !important;\\n  height: 18px !important;\\n}\\n\\n.notion-nav-icon {\\n  font-size: 18px;\\n  margin-right: 6px;\\n  line-height: 1.1;\\n  color: #000;\\n}\\n\\n.notion-nav-breadcrumb:not(.notion-nav-breadcrumb-active):hover {\\n  background: rgba(55, 53, 47, 0.08);\\n}\\n\\n.notion-nav-breadcrumb:not(.notion-nav-breadcrumb-active):active {\\n  background: rgba(55, 53, 47, 0.16);\\n}\\n\\n.notion-nav-breadcrumb.notion-nav-breadcrumb-active {\\n  cursor: default;\\n}\\n\\n.notion-nav-spacer {\\n  margin: 0 2px;\\n  color: rgba(55, 53, 47, 0.4);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\n");

/***/ }),

/***/ "./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fdylan%2Fvault%2Fshotclock%2Fpages%2Fabout%2Findex.tsx&page=%2Fabout!":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fdylan%2Fvault%2Fshotclock%2Fpages%2Fabout%2Findex.tsx&page=%2Fabout! ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/about\",\n      function () {\n        return __webpack_require__(/*! ./pages/about/index.tsx */ \"./pages/about/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/about\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxMi4xLjZfNGNiaHB4ZnRuNzc2bHF2NnZrMzRsemptbG0vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP2Fic29sdXRlUGFnZVBhdGg9JTJGVXNlcnMlMkZkeWxhbiUyRnZhdWx0JTJGc2hvdGNsb2NrJTJGcGFnZXMlMkZhYm91dCUyRmluZGV4LnRzeCZwYWdlPSUyRmFib3V0IS5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHdEQUF5QjtBQUNoRDtBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NzZkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL2Fib3V0XCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9hYm91dC9pbmRleC50c3hcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL2Fib3V0XCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fdylan%2Fvault%2Fshotclock%2Fpages%2Fabout%2Findex.tsx&page=%2Fabout!\n");

/***/ }),

/***/ "./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css ***!
  \******************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./styles.css */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./styles.css */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!../../../../next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./styles.css */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[1]!./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[7].use[2]!./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3Qtbm90aW9uQDAuMTAuMF9yZWFjdEAxOC4xLjAvbm9kZV9tb2R1bGVzL3JlYWN0LW5vdGlvbi9zcmMvc3R5bGVzLmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsOFRBQXdKO0FBQzFLLDBCQUEwQixtQkFBTyxDQUFDLG93QkFBOFU7O0FBRWhYOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLG93QkFBOFU7QUFDcFY7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxvd0JBQThVOztBQUV4Vzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3Qtbm90aW9uQDAuMTAuMF9yZWFjdEAxOC4xLjAvbm9kZV9tb2R1bGVzL3JlYWN0LW5vdGlvbi9zcmMvc3R5bGVzLmNzcz9iZWMzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25leHRAMTIuMS42XzRjYmhweGZ0bjc3NmxxdjZ2azM0bHpqbWxtL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9uZXh0QDEyLjEuNl80Y2JocHhmdG43NzZscXY2dmszNGx6am1sbS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls3XS51c2VbMV0hLi4vLi4vLi4vLi4vbmV4dEAxMi4xLjZfNGNiaHB4ZnRuNzc2bHF2NnZrMzRsemptbG0vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzddLnVzZVsyXSEuL3N0eWxlcy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uLy4uL25leHRAMTIuMS42XzRjYmhweGZ0bjc3NmxxdjZ2azM0bHpqbWxtL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzddLnVzZVsxXSEuLi8uLi8uLi8uLi9uZXh0QDEyLjEuNl80Y2JocHhmdG43NzZscXY2dmszNGx6am1sbS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbN10udXNlWzJdIS4vc3R5bGVzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbmV4dEAxMi4xLjZfNGNiaHB4ZnRuNzc2bHF2NnZrMzRsemptbG0vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbN10udXNlWzFdIS4uLy4uLy4uLy4uL25leHRAMTIuMS42XzRjYmhweGZ0bjc3NmxxdjZ2azM0bHpqbWxtL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls3XS51c2VbMl0hLi9zdHlsZXMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\n");

/***/ }),

/***/ "./pages/about/index.tsx":
/*!*******************************!*\
  !*** ./pages/about/index.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_dylan_vault_shotclock_node_modules_pnpm_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_dylan_vault_shotclock_node_modules_pnpm_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_dylan_vault_shotclock_node_modules_pnpm_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/.pnpm/react@18.1.0/node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-query */ \"./node_modules/.pnpm/react-query@3.39.1_ef5jwxihqo6n7gxfmzogljlgcm/node_modules/react-query/es/index.js\");\n/* harmony import */ var react_notion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-notion */ \"./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/dist/react-notion.esm.js\");\n/* harmony import */ var react_notion_src_styles_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-notion/src/styles.css */ \"./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/src/styles.css\");\n/* harmony import */ var react_notion_src_styles_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_notion_src_styles_css__WEBPACK_IMPORTED_MODULE_4__);\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n\nvar _this = undefined;\n\n\n\n\nvar _s = $RefreshSig$();\nvar getAbout = function() {\n    var _ref = _asyncToGenerator(_Users_dylan_vault_shotclock_node_modules_pnpm_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        return _Users_dylan_vault_shotclock_node_modules_pnpm_next_12_1_6_4cbhpxftn776lqv6vk34lzjmlm_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.next = 2;\n                    return fetch(\"api/page/shotclock-9ebbc7b285f84acf80c2a961e989ec31\");\n                case 2:\n                    return _ctx.abrupt(\"return\", _ctx.sent.json());\n                case 3:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function getAbout() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar About = function() {\n    _s();\n    var data = (0,react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery)([\n        \"getAbout\"\n    ], getAbout).data;\n    if (!data) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        children: \"Loading...\"\n    }, void 0, false, {\n        fileName: \"/Users/dylan/vault/shotclock/pages/about/index.tsx\",\n        lineNumber: 14,\n        columnNumber: 23\n    }, _this);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"max-w-3xl mx-auto mt-10\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_notion__WEBPACK_IMPORTED_MODULE_3__.NotionRenderer, {\n            blockMap: data.body\n        }, void 0, false, {\n            fileName: \"/Users/dylan/vault/shotclock/pages/about/index.tsx\",\n            lineNumber: 18,\n            columnNumber: 13\n        }, _this)\n    }, void 0, false, {\n        fileName: \"/Users/dylan/vault/shotclock/pages/about/index.tsx\",\n        lineNumber: 17,\n        columnNumber: 9\n    }, _this);\n};\n_s(About, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function() {\n    return [\n        react_query__WEBPACK_IMPORTED_MODULE_2__.useQuery\n    ];\n});\n_c = About;\n/* harmony default export */ __webpack_exports__[\"default\"] = (About);\nvar _c;\n$RefreshReg$(_c, \"About\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hYm91dC9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ087QUFDVDs7QUFFckMsSUFBTUUsUUFBUTtlQUFHLHNPQUFZOzs7OzsyQkFFZkMsS0FBSyxDQUFDLHFEQUFxRCxDQUFDOztpREFEL0QsVUFFTEMsSUFBSSxFQUFFOzs7Ozs7S0FDWDtvQkFKS0YsUUFBUTs7O0dBSWI7QUFFRCxJQUFNRyxLQUFLLEdBQUcsV0FBTTs7SUFDaEIsSUFBTSxJQUFNLEdBQUtMLHFEQUFRLENBQUM7UUFBQyxVQUFVO0tBQUMsRUFBRUUsUUFBUSxDQUFDLENBQXpDSSxJQUFJO0lBRVosSUFBSSxDQUFDQSxJQUFJLEVBQUUscUJBQU8sOERBQUNDLEtBQUc7a0JBQUMsWUFBVTs7Ozs7YUFBTSxDQUFDO0lBRXhDLHFCQUNJLDhEQUFDQSxLQUFHO1FBQUNDLFNBQVMsRUFBQyx5QkFBeUI7a0JBQ3BDLDRFQUFDUCx3REFBYztZQUFDUSxRQUFRLEVBQUVILElBQUksQ0FBQ0ksSUFBSTs7Ozs7aUJBQUk7Ozs7O2FBQ3JDLENBQ1I7Q0FDTDtHQVZLTCxLQUFLOztRQUNVTCxpREFBUTs7O0FBRHZCSyxLQUFBQSxLQUFLO0FBV1gsK0RBQWVBLEtBQUssRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9hYm91dC9pbmRleC50c3g/NjIwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgTm90aW9uUmVuZGVyZXIgfSBmcm9tIFwicmVhY3Qtbm90aW9uXCI7XG5pbXBvcnQgXCJyZWFjdC1ub3Rpb24vc3JjL3N0eWxlcy5jc3NcIjtcblxuY29uc3QgZ2V0QWJvdXQgPSBhc3luYyAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgYXdhaXQgZmV0Y2goXCJhcGkvcGFnZS9zaG90Y2xvY2stOWViYmM3YjI4NWY4NGFjZjgwYzJhOTYxZTk4OWVjMzFcIilcbiAgICApLmpzb24oKTtcbn07XG5cbmNvbnN0IEFib3V0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gdXNlUXVlcnkoW1wiZ2V0QWJvdXRcIl0sIGdldEFib3V0KTtcblxuICAgIGlmICghZGF0YSkgcmV0dXJuIDxkaXY+TG9hZGluZy4uLjwvZGl2PjtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctM3hsIG14LWF1dG8gbXQtMTBcIj5cbiAgICAgICAgICAgIDxOb3Rpb25SZW5kZXJlciBibG9ja01hcD17ZGF0YS5ib2R5fSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcbmV4cG9ydCBkZWZhdWx0IEFib3V0O1xuIl0sIm5hbWVzIjpbInVzZVF1ZXJ5IiwiTm90aW9uUmVuZGVyZXIiLCJnZXRBYm91dCIsImZldGNoIiwianNvbiIsIkFib3V0IiwiZGF0YSIsImRpdiIsImNsYXNzTmFtZSIsImJsb2NrTWFwIiwiYm9keSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/about/index.tsx\n");

/***/ }),

/***/ "./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/components/prism-jsx.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/components/prism-jsx.js ***!
  \****************************************************************************************/
/***/ (function() {

eval("(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/components/prism-jsx.js\n");

/***/ }),

/***/ "./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/prism.js":
/*!*************************************************************************!*\
  !*** ./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/prism.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif ( true && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof __webpack_require__.g !== 'undefined') {\n\t__webpack_require__.g.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/prism.js\n");

/***/ }),

/***/ "./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/dist/react-notion.esm.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/dist/react-notion.esm.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Block\": function() { return /* binding */ Block; },\n/* harmony export */   \"NotionRenderer\": function() { return /* binding */ NotionRenderer; },\n/* harmony export */   \"classNames\": function() { return /* binding */ classNames; },\n/* harmony export */   \"createRenderChildText\": function() { return /* binding */ createRenderChildText; },\n/* harmony export */   \"defaultMapImageUrl\": function() { return /* binding */ defaultMapImageUrl; },\n/* harmony export */   \"defaultMapPageUrl\": function() { return /* binding */ defaultMapPageUrl; },\n/* harmony export */   \"getListNumber\": function() { return /* binding */ getListNumber; },\n/* harmony export */   \"getTextContent\": function() { return /* binding */ getTextContent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/.pnpm/react@18.1.0/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prismjs */ \"./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/prism.js\");\n/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prismjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prismjs_components_prism_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prismjs/components/prism-jsx */ \"./node_modules/.pnpm/prismjs@1.28.0/node_modules/prismjs/components/prism-jsx.js\");\n/* harmony import */ var prismjs_components_prism_jsx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prismjs_components_prism_jsx__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar types = [\"video\", \"image\", \"embed\", \"figma\"];\n\nvar Asset = function Asset(_ref) {\n  var block = _ref.block,\n      mapImageUrl = _ref.mapImageUrl;\n  var value = block.value;\n  var type = block.value.type;\n\n  if (!types.includes(type)) {\n    return null;\n  }\n\n  var format = value.format;\n\n  var _ref2 = format !== null && format !== void 0 ? format : {},\n      _ref2$display_source = _ref2.display_source,\n      display_source = _ref2$display_source === void 0 ? undefined : _ref2$display_source,\n      _ref2$block_aspect_ra = _ref2.block_aspect_ratio,\n      block_aspect_ratio = _ref2$block_aspect_ra === void 0 ? undefined : _ref2$block_aspect_ra,\n      _ref2$block_height = _ref2.block_height,\n      block_height = _ref2$block_height === void 0 ? 1 : _ref2$block_height,\n      _ref2$block_width = _ref2.block_width,\n      block_width = _ref2$block_width === void 0 ? 1 : _ref2$block_width;\n\n  var aspectRatio = block_aspect_ratio || block_height / block_width;\n\n  if (type === \"embed\" || type === \"video\" || type === \"figma\") {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n      style: {\n        paddingBottom: aspectRatio * 100 + \"%\",\n        position: \"relative\"\n      }\n    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"iframe\", {\n      className: \"notion-image-inset\",\n      src: type === \"figma\" ? value.properties.source[0][0] : display_source\n    }));\n  }\n\n  if (block.value.type === \"image\") {\n    var _value$properties$cap;\n\n    var src = mapImageUrl(value.properties.source[0][0], block);\n    var caption = (_value$properties$cap = value.properties.caption) === null || _value$properties$cap === void 0 ? void 0 : _value$properties$cap[0][0];\n\n    if (block_aspect_ratio) {\n      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n        style: {\n          paddingBottom: aspectRatio * 100 + \"%\",\n          position: \"relative\"\n        }\n      }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n        className: \"notion-image-inset\",\n        alt: caption || \"notion image\",\n        src: src\n      }));\n    } else {\n      return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n        alt: caption,\n        src: src\n      });\n    }\n  }\n\n  return null;\n};\n\nvar Code = function Code(_ref) {\n  var code = _ref.code,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? \"javascript\" : _ref$language;\n  var languageL = language.toLowerCase();\n  var prismLanguage = prismjs__WEBPACK_IMPORTED_MODULE_1__.languages[languageL] || prismjs__WEBPACK_IMPORTED_MODULE_1__.languages.javascript;\n  var langClass = \"language-\" + language.toLowerCase();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"pre\", {\n    className: \"notion-code \" + langClass\n  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"code\", {\n    className: langClass,\n    dangerouslySetInnerHTML: {\n      __html: (0,prismjs__WEBPACK_IMPORTED_MODULE_1__.highlight)(code, prismLanguage, language)\n    }\n  }));\n};\n\nvar classNames = function classNames() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  return classes.filter(function (a) {\n    return !!a;\n  }).join(\" \");\n};\nvar getTextContent = function getTextContent(text) {\n  return text.reduce(function (prev, current) {\n    return prev + current[0];\n  }, \"\");\n};\n\nvar groupBlockContent = function groupBlockContent(blockMap) {\n  var output = [];\n  var lastType = undefined;\n  var index = -1;\n  Object.keys(blockMap).forEach(function (id) {\n    var _blockMap$id$value$co;\n\n    (_blockMap$id$value$co = blockMap[id].value.content) === null || _blockMap$id$value$co === void 0 ? void 0 : _blockMap$id$value$co.forEach(function (blockId) {\n      var _blockMap$blockId, _blockMap$blockId$val;\n\n      var blockType = (_blockMap$blockId = blockMap[blockId]) === null || _blockMap$blockId === void 0 ? void 0 : (_blockMap$blockId$val = _blockMap$blockId.value) === null || _blockMap$blockId$val === void 0 ? void 0 : _blockMap$blockId$val.type;\n\n      if (blockType && blockType !== lastType) {\n        index++;\n        lastType = blockType;\n        output[index] = [];\n      }\n\n      output[index].push(blockId);\n    });\n    lastType = undefined;\n  });\n  return output;\n};\n\nvar getListNumber = function getListNumber(blockId, blockMap) {\n  var groups = groupBlockContent(blockMap);\n  var group = groups.find(function (g) {\n    return g.includes(blockId);\n  });\n\n  if (!group) {\n    return;\n  }\n\n  return group.indexOf(blockId) + 1;\n};\nvar defaultMapImageUrl = function defaultMapImageUrl(image, block) {\n  if (image === void 0) {\n    image = \"\";\n  }\n\n  var url = new URL(\"https://www.notion.so\" + (image.startsWith(\"/image\") ? image : \"/image/\" + encodeURIComponent(image)));\n\n  if (block && !image.includes(\"/images/page-cover/\")) {\n    var table = block.value.parent_table === \"space\" ? \"block\" : block.value.parent_table;\n    url.searchParams.set(\"table\", table);\n    url.searchParams.set(\"id\", block.value.id);\n    url.searchParams.set(\"cache\", \"v2\");\n  }\n\n  return url.toString();\n};\nvar defaultMapPageUrl = function defaultMapPageUrl(pageId) {\n  if (pageId === void 0) {\n    pageId = \"\";\n  }\n\n  pageId = pageId.replace(/-/g, \"\");\n  return \"/\" + pageId;\n};\n\nvar isIconBlock = function isIconBlock(value) {\n  return value.type === \"page\" || value.type === \"callout\";\n};\n\nvar PageIcon = function PageIcon(_ref) {\n  var _block$value$format, _block$value$properti;\n\n  var block = _ref.block,\n      className = _ref.className,\n      big = _ref.big,\n      mapImageUrl = _ref.mapImageUrl;\n\n  if (!isIconBlock(block.value)) {\n    return null;\n  }\n\n  var icon = (_block$value$format = block.value.format) === null || _block$value$format === void 0 ? void 0 : _block$value$format.page_icon;\n  var title = (_block$value$properti = block.value.properties) === null || _block$value$properti === void 0 ? void 0 : _block$value$properti.title;\n\n  if (icon === null || icon === void 0 ? void 0 : icon.includes(\"http\")) {\n    var url = mapImageUrl(icon, block);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n      className: classNames(className, big ? \"notion-page-icon-cover\" : \"notion-page-icon\"),\n      src: url,\n      alt: title ? getTextContent(title) : \"Icon\"\n    });\n  } else {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n      className: classNames(className, \"notion-emoji\", big ? \"notion-page-icon-cover\" : \"notion-page-icon\"),\n      role: \"img\",\n      \"aria-label\": icon\n    }, icon);\n  }\n};\n\nvar PageHeader = function PageHeader(_ref) {\n  var blockMap = _ref.blockMap,\n      mapPageUrl = _ref.mapPageUrl,\n      mapImageUrl = _ref.mapImageUrl;\n  var blockIds = Object.keys(blockMap);\n  var activePageId = blockIds[0];\n\n  if (!activePageId) {\n    return null;\n  }\n\n  var breadcrumbs = [];\n  var currentPageId = activePageId;\n\n  do {\n    var _block$value$properti, _block$value$format;\n\n    var block = blockMap[currentPageId];\n\n    if (!block || !block.value) {\n      break;\n    }\n\n    var title = (_block$value$properti = block.value.properties) === null || _block$value$properti === void 0 ? void 0 : _block$value$properti.title[0][0];\n    var icon = (_block$value$format = block.value.format) === null || _block$value$format === void 0 ? void 0 : _block$value$format.page_icon;\n\n    if (!(title || icon)) {\n      break;\n    }\n\n    breadcrumbs.push({\n      block: block,\n      active: currentPageId === activePageId,\n      pageId: currentPageId,\n      title: title,\n      icon: icon\n    });\n    var parentId = block.value.parent_id;\n\n    if (!parentId) {\n      break;\n    }\n\n    currentPageId = parentId;\n  } while (true);\n\n  breadcrumbs.reverse();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"header\", {\n    className: \"notion-page-header\"\n  }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n    className: \"notion-nav-breadcrumbs\"\n  }, breadcrumbs.map(function (breadcrumb, index) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: breadcrumb.pageId\n    }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"a\", {\n      className: \"notion-nav-breadcrumb \" + (breadcrumb.active ? \"notion-nav-breadcrumb-active\" : \"\"),\n      href: breadcrumb.active ? undefined : mapPageUrl(breadcrumb.pageId)\n    }, breadcrumb.icon && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageIcon, {\n      className: \"notion-nav-icon\",\n      block: breadcrumb.block,\n      mapImageUrl: mapImageUrl\n    }), breadcrumb.title && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n      className: \"notion-nav-title\"\n    }, breadcrumb.title)), index < breadcrumbs.length - 1 && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n      className: \"notion-nav-spacer\"\n    }, \"/\"));\n  })));\n};\n\nvar createRenderChildText = function createRenderChildText(customDecoratorComponents) {\n  return function (properties) {\n    return properties === null || properties === void 0 ? void 0 : properties.map(function (_ref, i) {\n      var text = _ref[0],\n          decorations = _ref[1];\n\n      if (!decorations) {\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: i\n        }, text);\n      }\n\n      return decorations.reduceRight(function (element, decorator) {\n        var renderText = function renderText() {\n          switch (decorator[0]) {\n            case \"h\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"span\", {\n                key: i,\n                className: \"notion-\" + decorator[1]\n              }, element);\n\n            case \"c\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"code\", {\n                key: i,\n                className: \"notion-inline-code\"\n              }, element);\n\n            case \"b\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"b\", {\n                key: i\n              }, element);\n\n            case \"i\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"em\", {\n                key: i\n              }, element);\n\n            case \"s\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"s\", {\n                key: i\n              }, element);\n\n            case \"a\":\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"a\", {\n                className: \"notion-link\",\n                href: decorator[1],\n                key: i\n              }, element);\n\n            default:\n              return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                key: i\n              }, element);\n          }\n        };\n\n        var CustomComponent = customDecoratorComponents === null || customDecoratorComponents === void 0 ? void 0 : customDecoratorComponents[decorator[0]];\n\n        if (CustomComponent) {\n          var props = decorator[1] ? {\n            decoratorValue: decorator[1]\n          } : {};\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomComponent, Object.assign({\n            key: i\n          }, props, {\n            renderComponent: renderText\n          }), text);\n        }\n\n        return renderText();\n      }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, text));\n    });\n  };\n};\nvar Block = function Block(props) {\n  var block = props.block,\n      children = props.children,\n      level = props.level,\n      fullPage = props.fullPage,\n      hideHeader = props.hideHeader,\n      blockMap = props.blockMap,\n      mapPageUrl = props.mapPageUrl,\n      mapImageUrl = props.mapImageUrl,\n      customBlockComponents = props.customBlockComponents,\n      customDecoratorComponents = props.customDecoratorComponents;\n  var blockValue = block === null || block === void 0 ? void 0 : block.value;\n\n  var renderComponent = function renderComponent() {\n    var _blockValue$format, _block$collection, _block$collection2, _collectionView$forma, _collectionView$forma2, _block$collection4, _block$collection6, _blockValue$propertie, _blockValue$format2, _blockValue$format3, _blockValue$format4;\n\n    var renderChildText = createRenderChildText(customDecoratorComponents);\n\n    switch (blockValue === null || blockValue === void 0 ? void 0 : blockValue.type) {\n      case \"page\":\n        if (level === 0) {\n          if (fullPage) {\n            if (!blockValue.properties) {\n              return null;\n            }\n\n            var _ref2 = blockValue.format || {},\n                page_icon = _ref2.page_icon,\n                page_cover = _ref2.page_cover,\n                page_cover_position = _ref2.page_cover_position,\n                page_full_width = _ref2.page_full_width,\n                page_small_text = _ref2.page_small_text;\n\n            var coverPosition = (1 - (page_cover_position || 0.5)) * 100;\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n              className: \"notion\"\n            }, !hideHeader && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageHeader, {\n              blockMap: blockMap,\n              mapPageUrl: mapPageUrl,\n              mapImageUrl: mapImageUrl\n            }), page_cover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n              src: mapImageUrl(page_cover, block),\n              alt: getTextContent(blockValue.properties.title),\n              className: \"notion-page-cover\",\n              style: {\n                objectPosition: \"center \" + coverPosition + \"%\"\n              }\n            }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"main\", {\n              className: classNames(\"notion-page\", !page_cover && \"notion-page-offset\", page_full_width && \"notion-full-width\", page_small_text && \"notion-small-text\")\n            }, page_icon && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageIcon, {\n              className: page_cover ? \"notion-page-icon-offset\" : undefined,\n              block: block,\n              big: true,\n              mapImageUrl: mapImageUrl\n            }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n              className: \"notion-title\"\n            }, renderChildText(blockValue.properties.title)), children));\n          } else {\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"main\", {\n              className: \"notion\"\n            }, children);\n          }\n        } else {\n          if (!blockValue.properties) return null;\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"a\", {\n            className: \"notion-page-link\",\n            href: mapPageUrl(blockValue.id)\n          }, blockValue.format && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            className: \"notion-page-icon\"\n          }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageIcon, {\n            block: block,\n            mapImageUrl: mapImageUrl\n          })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            className: \"notion-page-text\"\n          }, renderChildText(blockValue.properties.title)));\n        }\n\n      case \"header\":\n        if (!blockValue.properties) return null;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"h1\", {\n          className: \"notion-h1\"\n        }, renderChildText(blockValue.properties.title));\n\n      case \"sub_header\":\n        if (!blockValue.properties) return null;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"h2\", {\n          className: \"notion-h2\"\n        }, renderChildText(blockValue.properties.title));\n\n      case \"sub_sub_header\":\n        if (!blockValue.properties) return null;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"h3\", {\n          className: \"notion-h3\"\n        }, renderChildText(blockValue.properties.title));\n\n      case \"divider\":\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"hr\", {\n          className: \"notion-hr\"\n        });\n\n      case \"text\":\n        if (!blockValue.properties) {\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            className: \"notion-blank\"\n          }, \"\\xA0\");\n        }\n\n        var blockColor = (_blockValue$format = blockValue.format) === null || _blockValue$format === void 0 ? void 0 : _blockValue$format.block_color;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"p\", {\n          className: classNames(\"notion-text\", blockColor && \"notion-\" + blockColor)\n        }, renderChildText(blockValue.properties.title));\n\n      case \"bulleted_list\":\n      case \"numbered_list\":\n        var wrapList = function wrapList(content, start) {\n          return blockValue.type === \"bulleted_list\" ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ul\", {\n            className: \"notion-list notion-list-disc\"\n          }, content) : (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ol\", {\n            start: start,\n            className: \"notion-list notion-list-numbered\"\n          }, content);\n        };\n\n        var output = null;\n\n        if (blockValue.content) {\n          output = (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, blockValue.properties && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"li\", null, renderChildText(blockValue.properties.title)), wrapList(children));\n        } else {\n          output = blockValue.properties ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"li\", null, renderChildText(blockValue.properties.title)) : null;\n        }\n\n        var isTopLevel = block.value.type !== blockMap[block.value.parent_id].value.type;\n        var start = getListNumber(blockValue.id, blockMap);\n        return isTopLevel ? wrapList(output, start) : output;\n\n      case \"image\":\n      case \"embed\":\n      case \"figma\":\n      case \"video\":\n        var value = block.value;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"figure\", {\n          className: \"notion-asset-wrapper\",\n          style: value.format !== undefined ? {\n            width: value.format.block_width\n          } : undefined\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Asset, {\n          block: block,\n          mapImageUrl: mapImageUrl\n        }), value.properties.caption && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"figcaption\", {\n          className: \"notion-image-caption\"\n        }, renderChildText(value.properties.caption)));\n\n      case \"code\":\n        {\n          if (blockValue.properties.title) {\n            var content = blockValue.properties.title[0][0];\n            var language = blockValue.properties.language[0][0];\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Code, {\n              key: blockValue.id,\n              language: language || \"\",\n              code: content\n            });\n          }\n\n          break;\n        }\n\n      case \"column_list\":\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-row\"\n        }, children);\n\n      case \"column\":\n        var spacerWith = 46;\n        var ratio = blockValue.format.column_ratio;\n        var columns = Number((1 / ratio).toFixed(0));\n        var spacerTotalWith = (columns - 1) * spacerWith;\n        var width = \"calc((100% - \" + spacerTotalWith + \"px) * \" + ratio + \")\";\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-column\",\n          style: {\n            width: width\n          }\n        }, children), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-spacer\",\n          style: {\n            width: spacerWith\n          }\n        }));\n\n      case \"quote\":\n        if (!blockValue.properties) return null;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"blockquote\", {\n          className: \"notion-quote\"\n        }, renderChildText(blockValue.properties.title));\n\n      case \"collection_view\":\n        if (!block) return null;\n        var collectionView = block === null || block === void 0 ? void 0 : (_block$collection = block.collection) === null || _block$collection === void 0 ? void 0 : _block$collection.types[0];\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"h3\", {\n          className: \"notion-h3\"\n        }, renderChildText((_block$collection2 = block.collection) === null || _block$collection2 === void 0 ? void 0 : _block$collection2.title)), (collectionView === null || collectionView === void 0 ? void 0 : collectionView.type) === \"table\" && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          style: {\n            maxWidth: \"100%\",\n            marginTop: 5\n          }\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"table\", {\n          className: \"notion-table\"\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"thead\", null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"tr\", {\n          className: \"notion-tr\"\n        }, (_collectionView$forma = collectionView.format) === null || _collectionView$forma === void 0 ? void 0 : (_collectionView$forma2 = _collectionView$forma.table_properties) === null || _collectionView$forma2 === void 0 ? void 0 : _collectionView$forma2.filter(function (p) {\n          return p.visible;\n        }).map(function (gp, index) {\n          var _block$collection3, _block$collection3$sc;\n\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"th\", {\n            className: \"notion-th\",\n            key: index,\n            style: {\n              minWidth: gp.width\n            }\n          }, (_block$collection3 = block.collection) === null || _block$collection3 === void 0 ? void 0 : (_block$collection3$sc = _block$collection3.schema[gp.property]) === null || _block$collection3$sc === void 0 ? void 0 : _block$collection3$sc.name);\n        }))), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"tbody\", null, block === null || block === void 0 ? void 0 : (_block$collection4 = block.collection) === null || _block$collection4 === void 0 ? void 0 : _block$collection4.data.map(function (row, index) {\n          var _collectionView$forma3, _collectionView$forma4;\n\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"tr\", {\n            className: \"notion-tr\",\n            key: index\n          }, (_collectionView$forma3 = collectionView.format) === null || _collectionView$forma3 === void 0 ? void 0 : (_collectionView$forma4 = _collectionView$forma3.table_properties) === null || _collectionView$forma4 === void 0 ? void 0 : _collectionView$forma4.filter(function (p) {\n            return p.visible;\n          }).map(function (gp, index) {\n            var _block$collection5, _block$collection5$sc;\n\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"td\", {\n              key: index,\n              className: \"notion-td \" + (gp.property === \"title\" ? \"notion-bold\" : \"\")\n            }, renderChildText(row[(_block$collection5 = block.collection) === null || _block$collection5 === void 0 ? void 0 : (_block$collection5$sc = _block$collection5.schema[gp.property]) === null || _block$collection5$sc === void 0 ? void 0 : _block$collection5$sc.name]));\n          }));\n        })))), (collectionView === null || collectionView === void 0 ? void 0 : collectionView.type) === \"gallery\" && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-gallery\"\n        }, (_block$collection6 = block.collection) === null || _block$collection6 === void 0 ? void 0 : _block$collection6.data.map(function (row, i) {\n          var _collectionView$forma5, _collectionView$forma6;\n\n          return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            key: \"col-\" + i,\n            className: \"notion-gallery-card\"\n          }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            className: \"notion-gallery-content\"\n          }, (_collectionView$forma5 = collectionView.format) === null || _collectionView$forma5 === void 0 ? void 0 : (_collectionView$forma6 = _collectionView$forma5.gallery_properties) === null || _collectionView$forma6 === void 0 ? void 0 : _collectionView$forma6.filter(function (p) {\n            return p.visible;\n          }).map(function (gp, idx) {\n            var _block$collection7;\n\n            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"p\", {\n              key: idx + \"item\",\n              className: \"notion-gallery-data \" + (idx === 0 ? \"is-first\" : \"\")\n            }, getTextContent(row[(_block$collection7 = block.collection) === null || _block$collection7 === void 0 ? void 0 : _block$collection7.schema[gp.property].name]));\n          })));\n        })));\n\n      case \"callout\":\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: classNames(\"notion-callout\", blockValue.format.block_color && \"notion-\" + blockValue.format.block_color, blockValue.format.block_color && \"notion-\" + blockValue.format.block_color + \"_co\")\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(PageIcon, {\n          block: block,\n          mapImageUrl: mapImageUrl\n        })), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-callout-text\"\n        }, renderChildText(blockValue.properties.title)));\n\n      case \"bookmark\":\n        var link = blockValue.properties.link;\n        var title = (_blockValue$propertie = blockValue.properties.title) !== null && _blockValue$propertie !== void 0 ? _blockValue$propertie : link;\n        var description = blockValue.properties.description;\n        var block_color = (_blockValue$format2 = blockValue.format) === null || _blockValue$format2 === void 0 ? void 0 : _blockValue$format2.block_color;\n        var bookmark_icon = (_blockValue$format3 = blockValue.format) === null || _blockValue$format3 === void 0 ? void 0 : _blockValue$format3.bookmark_icon;\n        var bookmark_cover = (_blockValue$format4 = blockValue.format) === null || _blockValue$format4 === void 0 ? void 0 : _blockValue$format4.bookmark_cover;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-row\"\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: classNames(\"notion-bookmark\", block_color && \"notion-\" + block_color),\n          href: link[0][0]\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-bookmark-title\"\n        }, renderChildText(title)), description && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-bookmark-description\"\n        }, renderChildText(description)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-bookmark-link\"\n        }, bookmark_icon && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n          src: bookmark_icon,\n          alt: getTextContent(title)\n        }), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null, renderChildText(link)))), bookmark_cover && (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n          className: \"notion-bookmark-image\"\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"img\", {\n          src: bookmark_cover,\n          alt: getTextContent(title)\n        }))));\n\n      case \"toggle\":\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"details\", {\n          className: \"notion-toggle\"\n        }, (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"summary\", null, renderChildText(blockValue.properties.title)), (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null, children));\n\n      default:\n        if (true) {\n          var _block$value;\n\n          console.log(\"Unsupported type \" + (block === null || block === void 0 ? void 0 : (_block$value = block.value) === null || _block$value === void 0 ? void 0 : _block$value.type));\n        }\n\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", null);\n    }\n\n    return null;\n  }; // render a custom component first if passed.\n\n\n  if (customBlockComponents && customBlockComponents[blockValue === null || blockValue === void 0 ? void 0 : blockValue.type] && // Do not use custom component for base page block\n  level !== 0) {\n    var CustomComponent = customBlockComponents[blockValue === null || blockValue === void 0 ? void 0 : blockValue.type];\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomComponent, {\n      renderComponent: renderComponent,\n      blockMap: blockMap,\n      blockValue: blockValue,\n      level: level\n    }, children);\n  }\n\n  return renderComponent();\n};\n\nvar NotionRenderer = function NotionRenderer(_ref) {\n  var _currentBlock$value, _currentBlock$value$c;\n\n  var _ref$level = _ref.level,\n      level = _ref$level === void 0 ? 0 : _ref$level,\n      currentId = _ref.currentId,\n      _ref$mapPageUrl = _ref.mapPageUrl,\n      mapPageUrl = _ref$mapPageUrl === void 0 ? defaultMapPageUrl : _ref$mapPageUrl,\n      _ref$mapImageUrl = _ref.mapImageUrl,\n      mapImageUrl = _ref$mapImageUrl === void 0 ? defaultMapImageUrl : _ref$mapImageUrl,\n      props = _objectWithoutPropertiesLoose(_ref, [\"level\", \"currentId\", \"mapPageUrl\", \"mapImageUrl\"]);\n\n  var blockMap = props.blockMap;\n  var id = currentId || Object.keys(blockMap)[0];\n  var currentBlock = blockMap[id];\n\n  if (!currentBlock) {\n    if (true) {\n      console.warn(\"error rendering block\", currentId);\n    }\n\n    return null;\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Block, Object.assign({\n    key: id,\n    level: level,\n    block: currentBlock,\n    mapPageUrl: mapPageUrl,\n    mapImageUrl: mapImageUrl\n  }, props), currentBlock === null || currentBlock === void 0 ? void 0 : (_currentBlock$value = currentBlock.value) === null || _currentBlock$value === void 0 ? void 0 : (_currentBlock$value$c = _currentBlock$value.content) === null || _currentBlock$value$c === void 0 ? void 0 : _currentBlock$value$c.map(function (contentId) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NotionRenderer, Object.assign({\n      key: contentId,\n      currentId: contentId,\n      level: level + 1,\n      mapPageUrl: mapPageUrl,\n      mapImageUrl: mapImageUrl\n    }, props));\n  }));\n};\n\n\n//# sourceMappingURL=react-notion.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/react-notion@0.10.0_react@18.1.0/node_modules/react-notion/dist/react-notion.esm.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/.pnpm/next@12.1.6_4cbhpxftn776lqv6vk34lzjmlm/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fdylan%2Fvault%2Fshotclock%2Fpages%2Fabout%2Findex.tsx&page=%2Fabout!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);